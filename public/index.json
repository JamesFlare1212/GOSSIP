[{"categories":["Programing"],"content":"在 C 语言中，加减乘除是常见的数学运算，但它们使用的运算符与数学中的略有不同，如何在 C 语言中进行加减乘除运算，不同类型参与运算，不同类型的除数和被除数，加减乘除运算的简写。","date":"2023-02-16","objectID":"/posts/c-arithmetic-notation-part-1/","tags":["C"],"title":"实践手册：C 语言中的运算符号 Part 1","uri":"/posts/c-arithmetic-notation-part-1/"},{"categories":["Programing"],"content":"前言 在 C 语言中，加减乘除是常见的数学运算，但它们使用的运算符与数学中的略有不同， 数学运算 运算符 C语言中的运算符 加法 + + 减法 - - 乘法 × 或 * * 除法 ÷ 或 / / ","date":"2023-02-16","objectID":"/posts/c-arithmetic-notation-part-1/:1:0","tags":["C"],"title":"实践手册：C 语言中的运算符号 Part 1","uri":"/posts/c-arithmetic-notation-part-1/"},{"categories":["Programing"],"content":"加减乘除运算 如何在 C 语言中进行加减乘除运算，以下是代码示例。 #include \u003cstdio.h\u003e int main() { int a = 10; int b = 5; // 加法 int sum = a + b; printf(\"a + b = %d\\n\", sum); // 减法 int difference = a - b; printf(\"a - b = %d\\n\", difference); // 乘法 int product = a * b; printf(\"a * b = %d\\n\", product); // 除法 int quotient = a / b; printf(\"a / b = %d\\n\", quotient); return 0; } 这段代码将打印出以下内容： a + b = 15 a - b = 5 a * b = 50 a / b = 2 在这段代码中，我们定义了两个整数变量 a 和 b，分别赋值为 10 和 5。接着，我们使用四个基本运算符进行加减乘除运算，并将结果分别存储在 sum、difference、product 和 quotient 变量中。最后，我们使用 printf() 函数打印出每个运算结果的值。 在加法运算中， a + b 的结果是 15，因此打印出的内容为 a + b = 15。 在减法运算中， a - b 的结果是 5，因此打印出的内容为 a - b = 5。 在乘法运算中， a * b 的结果是 50，因此打印出的内容为 a * b = 50。 在除法运算中， a / b 的结果是 2，因为在 C 语言中整数除以整数的结果仍为整数（即向下取整），因此打印出的内容为 a / b = 2。 总的来说，这段代码演示了 C 语言中基本的加减乘除运算，以及如何使用 printf() 函数打印输出结果。 ","date":"2023-02-16","objectID":"/posts/c-arithmetic-notation-part-1/:2:0","tags":["C"],"title":"实践手册：C 语言中的运算符号 Part 1","uri":"/posts/c-arithmetic-notation-part-1/"},{"categories":["Programing"],"content":"不同类型参与运算 以下是一段演示加减乘除运算的C语言代码，其中包括了三种不同的情况，即变量参与运算、数字和变量参与运算、数字直接参与运算。 #include \u003cstdio.h\u003e int main() { int a = 10; int b = 5; // 变量参与运算 int sum1 = a + b; int difference1 = a - b; int product1 = a * b; int quotient1 = a / b; printf(\"a + b = %d\\n\", sum1); printf(\"a - b = %d\\n\", difference1); printf(\"a * b = %d\\n\", product1); printf(\"a / b = %d\\n\", quotient1); // 有变量也有数字 float sum2 = a + 3.14; float difference2 = b - 1.5; float product2 = a * 2.5; float quotient2 = b / 2.0; printf(\"a + 3.14 = %.2f\\n\", sum2); printf(\"b - 1.5 = %.2f\\n\", difference2); printf(\"a * 2.5 = %.2f\\n\", product2); printf(\"b / 2.0 = %.2f\\n\", quotient2); // 数字直接参与运算 double sum3 = 1.234 + 5.678; double difference3 = 10.0 - 2.5; double product3 = 12.7 * 34.3; double quotient3 = 25.0 / 2.0; printf(\"1.234 + 5.678 = %.3f\\n\", sum3); printf(\"10.0 - 2.5 = %.1f\\n\", difference3); printf(\"12.7 * 34.3 = %.2f\\n\", product3); printf(\"25.0 / 2.0 = %.1f\\n\", quotient3); return 0; } 这段代码的输出如下： a + b = 15 a - b = 5 a * b = 50 a / b = 2 a + 3 = 13 b - 1.5 = 3.50 a * 2.5 = 25.00 b / 2.0 = 2.50 1.234 + 5.678 = 6.912 10.0 - 2.5 = 7.5 12.7 * 34.3 = 435.61 25.0 / 2.0 = 12.5 在这个输出中，每行都对应着一个运算的结果，输出内容根据变量的类型使用了不同的格式化字符串，以保证精度和正确的显示。我们可以看到，这个程序成功地对变量和数字进行了不同类型的运算，并且正确地输出了运算结果。 在这段代码中，我们定义了两个整数变量 a 和 b，分别赋值为 10 和 5。接着，我们使用四个基本运算符进行加减乘除运算，并将结果分别存储在不同类型的变量中。我们使用 printf() 函数打印出每个运算结果的值。 在第一个示例中，变量 a 和 b 参与了运算，这是常见的变量参与运算的情况。 在第二个示例中，我们将变量和数字进行了运算。例如，我们对变量 a 和数字 3.14 进行了加法运算，对变量 b 和数字 1.5 进行了减法运算等。 在第三个示例中，数字直接参与运算。例如，我们直接对数字 1.234 和 5.678 进行了加法运算，对数字 10.0 和 2.5 进行了减法运算等。 总的来说，这段代码演示了 C 语言中基本的加减乘除运算，以及变量、数字组合的运算。这些运算分别存储在不同类型的变量中，并通过 printf() 函数打印出运算结果。 ","date":"2023-02-16","objectID":"/posts/c-arithmetic-notation-part-1/:3:0","tags":["C"],"title":"实践手册：C 语言中的运算符号 Part 1","uri":"/posts/c-arithmetic-notation-part-1/"},{"categories":["Programing"],"content":"除法运算 ","date":"2023-02-16","objectID":"/posts/c-arithmetic-notation-part-1/:4:0","tags":["C"],"title":"实践手册：C 语言中的运算符号 Part 1","uri":"/posts/c-arithmetic-notation-part-1/"},{"categories":["Programing"],"content":"不同类型 以下是一段演示不同类型的除数和被除数会导致不同类型的运算结果的C语言代码。 #include \u003cstdio.h\u003e int main() { int a = 10; float b = 5.0; // 整数除法 int quotient1 = a / 3; printf(\"%d / %d = %d\\n\", a, 3, quotient1); // 浮点数除法 float quotient2 = a / b; printf(\"%d / %.1f = %.2f\\n\", a, b, quotient2); // 强制类型转换 float quotient3 = (float)a / 3; printf(\"%.1f / %d = %.2f\\n\", b, 3, quotient3); return 0; } 这段代码的输出如下： 10 / 3 = 3 10 / 5.0 = 2.00 5.0 / 3 = 1.67 在这个输出中，每行都对应着一个运算的结果，输出内容根据变量的类型使用了不同的格式化字符串，以保证精度和正确的显示。我们可以看到，这个程序成功地演示了不同类型的除数和被除数会导致不同类型的运算结果，并且正确地输出了运算结果。 在这段代码中，我们定义了一个整数变量 a 和一个浮点数变量 b，分别赋值为 10 和 5.0。接着，我们使用除法运算符 / 进行整数除法和浮点数除法运算，并将结果存储在不同类型的变量中。 在第一个示例中，我们对整数变量 a 和整数 3 进行了除法运算。由于两个操作数都是整数，因此结果也是整数。在这种情况下，C语言会对除法的结果向下取整，得到整数值 3，而不是预期的浮点数 3.333...。因此，输出结果为 10 / 3 = 3。 在第二个示例中，我们对整数变量 a 和浮点数变量 b 进行了除法运算。由于两个操作数类型不同，C 语言会将整数变量 a 隐式转换为浮点数，然后进行除法运算。在这种情况下，结果为浮点数 2.00，因此输出结果为 10 / 5.0 = 2.00。 在第三个示例中，我们使用强制类型转换将整数变量 a 显式转换为浮点数。这样，整数除法就会产生浮点数结果，而不是向下取整的整数。因此，输出结果为 5.0 / 3 = 1.67。 总的来说，这段代码演示了不同类型的除数和被除数会导致不同类型的运算结果，以及使用强制类型转换来处理这种情况的方法。 ","date":"2023-02-16","objectID":"/posts/c-arithmetic-notation-part-1/:4:1","tags":["C"],"title":"实践手册：C 语言中的运算符号 Part 1","uri":"/posts/c-arithmetic-notation-part-1/"},{"categories":["Programing"],"content":"都是整数 以下是一段演示当除数和被除数都是整数时，运算结果也是整数的C语言代码。如果不能整除，那就会直接丢掉小数部分，只保留整数部分。 #include \u003cstdio.h\u003e int main() { int a = 10; int b = 3; int quotient = a / b; printf(\"%d / %d = %d\\n\", a, b, quotient); return 0; } 这段代码的输出如下： 10 / 3 = 3 在这段代码中，我们定义了两个整数变量 a 和 b，分别赋值为 10 和 3。接着，我们使用除法运算符 / 进行整数除法运算，并将结果存储在整数变量 quotient 中。 由于除数和被除数都是整数，因此结果也是整数。在这种情况下，C 语言会对除法的结果向下取整，得到整数值 3，而不是预期的浮点数 3.333...。因此，输出结果为 10 / 3 = 3。 总的来说，这段代码演示了当除数和被除数都是整数时，运算结果也是整数的情况，并展示了 C 语言如何处理这种情况。如果不能整除，那么就直接丢掉小数部分，只保留整数部分。 ","date":"2023-02-16","objectID":"/posts/c-arithmetic-notation-part-1/:4:2","tags":["C"],"title":"实践手册：C 语言中的运算符号 Part 1","uri":"/posts/c-arithmetic-notation-part-1/"},{"categories":["Programing"],"content":"有一个是小数 以下是一段演示当除数和被除数中有一个是小数时，运算结果也是小数，并且是 double 类型的小数的C语言代码。 #include \u003cstdio.h\u003e int main() { int a = 10; double b = 3.0; double quotient = a / b; printf(\"%d / %.1f = %.2f\\n\", a, b, quotient); return 0; } 这段代码的输出如下： 10 / 3.0 = 3.33 在这段代码中，我们定义了一个整数变量 a 和一个双精度浮点数变量 b，分别赋值为 10 和 3.0。接着，我们使用除法运算符 / 进行除法运算，并将结果存储在双精度浮点数变量 quotient 中。 由于被除数 b 是小数，因此 C 会自动将整数变量 a 隐式转换成浮点数，然后执行浮点数除法运算，结果为双精度浮点数类型。输出结果使用了 %f 格式化字符串，因为 quotient 变量是双精度浮点数类型。因此，输出结果为 10 / 3.0 = 3.33。 总的来说，这段代码演示了当除数和被除数中有一个是小数时，运算结果也是小数，并且是 double 类型的小数。 ","date":"2023-02-16","objectID":"/posts/c-arithmetic-notation-part-1/:4:3","tags":["C"],"title":"实践手册：C 语言中的运算符号 Part 1","uri":"/posts/c-arithmetic-notation-part-1/"},{"categories":["Programing"],"content":"运算的简写 以下是一段演示对一个变量进行某种运算，然后再把运算结果赋值给变量本身，以及变量本身进行运算的简写形式的C语言代码。 #include \u003cstdio.h\u003e int main() { int a = 10; // 常规形式 a = a + 5; printf(\"a = %d\\n\", a); // 简写形式 a += 5; printf(\"a = %d\\n\", a); return 0; } 这段代码的输出结果如下： a = 15 a = 20 在这段代码中，我们定义了一个整数变量 a，并将其赋值为 10。接着，我们对变量 a 进行加法运算，并将运算结果赋值给变量本身。 在第一个示例中，我们使用常规形式 a = a + 5;，这意味着我们首先要对 a 进行加法运算，并将结果赋值给 a。这行代码的效果等同于 a = 10 + 5;，因此最终 a 的值变为 15。输出结果为 a = 15。 在第二个示例中，我们使用了简写形式 a += 5;，这是一种把运算结果赋值给变量本身的简写形式。这行代码的效果等同于 a = a + 5;，因此最终 a 的值变为 20。输出结果为 a = 20。 总的来说，这段代码演示了对一个变量进行某种运算，然后再把运算结果赋值给变量本身，以及变量本身进行运算的简写形式。 ","date":"2023-02-16","objectID":"/posts/c-arithmetic-notation-part-1/:5:0","tags":["C"],"title":"实践手册：C 语言中的运算符号 Part 1","uri":"/posts/c-arithmetic-notation-part-1/"},{"categories":["Sharing"],"content":"一些交通常见违法行为的罚款，扣分和其违法代码收集。高速逆行，其他道路逆行，高速应急车道，不按导向车道，闯红灯，乱掉头，违规变道，不打转向灯，打电话，妨碍驾驶，不系安全带，不按规定使用灯光等。","date":"2023-01-28","objectID":"/posts/traffic-violations-code/","tags":["Law"],"title":"常用交通违法代码","uri":"/posts/traffic-violations-code/"},{"categories":["Sharing"],"content":"逆行 ","date":"2023-01-28","objectID":"/posts/traffic-violations-code/:1:0","tags":["Law"],"title":"常用交通违法代码","uri":"/posts/traffic-violations-code/"},{"categories":["Sharing"],"content":"高速逆行 在高速公路上逆行的。违法代码 47021，罚款 200 元，记 12 分。 ","date":"2023-01-28","objectID":"/posts/traffic-violations-code/:1:1","tags":["Law"],"title":"常用交通违法代码","uri":"/posts/traffic-violations-code/"},{"categories":["Sharing"],"content":"其他道路逆行 驾驶机动车在高速公路，城市快速路以外的道路上逆向行驶的。违法代码1373，罚款 200 元，记 3 分。 ","date":"2023-01-28","objectID":"/posts/traffic-violations-code/:1:2","tags":["Law"],"title":"常用交通违法代码","uri":"/posts/traffic-violations-code/"},{"categories":["Sharing"],"content":"行车 ","date":"2023-01-28","objectID":"/posts/traffic-violations-code/:2:0","tags":["Law"],"title":"常用交通违法代码","uri":"/posts/traffic-violations-code/"},{"categories":["Sharing"],"content":"高速应急车道 非紧急情况时在高速公路应急车道上行驶的。违法代码46081，罚款 200 元，记 6 分。 ","date":"2023-01-28","objectID":"/posts/traffic-violations-code/:2:1","tags":["Law"],"title":"常用交通违法代码","uri":"/posts/traffic-violations-code/"},{"categories":["Sharing"],"content":"不按导向车道 机动车通过有灯控路口时，不按所需行进方向驶入导向车道的。违法代码6095，罚款 100 元。 ","date":"2023-01-28","objectID":"/posts/traffic-violations-code/:2:2","tags":["Law"],"title":"常用交通违法代码","uri":"/posts/traffic-violations-code/"},{"categories":["Sharing"],"content":"闯红灯 驾驶机动车违反道路交通信号灯通行的。违法代码1625，罚款 200 元，记 6 分。 ","date":"2023-01-28","objectID":"/posts/traffic-violations-code/:2:3","tags":["Law"],"title":"常用交通违法代码","uri":"/posts/traffic-violations-code/"},{"categories":["Sharing"],"content":"不按规定倒车 不按规定倒车的。违法代码1124，记 1 分，罚款 100 元。 ","date":"2023-01-28","objectID":"/posts/traffic-violations-code/:2:4","tags":["Law"],"title":"常用交通违法代码","uri":"/posts/traffic-violations-code/"},{"categories":["Sharing"],"content":"不按规定会车 不按规定会车的。违法代码1103，记 1 分，罚款 200 元。 ","date":"2023-01-28","objectID":"/posts/traffic-violations-code/:2:5","tags":["Law"],"title":"常用交通违法代码","uri":"/posts/traffic-violations-code/"},{"categories":["Sharing"],"content":"停在停止线以内 通过路口遇停止信号时，停在停止线以内或路口内的。违法代码6090，罚款 100 元。 ","date":"2023-01-28","objectID":"/posts/traffic-violations-code/:2:6","tags":["Law"],"title":"常用交通违法代码","uri":"/posts/traffic-violations-code/"},{"categories":["Sharing"],"content":"右侧超车 从前车右侧超车的。违法代码1304，记 3 分，罚款 200 元。 ","date":"2023-01-28","objectID":"/posts/traffic-violations-code/:2:7","tags":["Law"],"title":"常用交通违法代码","uri":"/posts/traffic-violations-code/"},{"categories":["Sharing"],"content":"变道 ","date":"2023-01-28","objectID":"/posts/traffic-violations-code/:3:0","tags":["Law"],"title":"常用交通违法代码","uri":"/posts/traffic-violations-code/"},{"categories":["Sharing"],"content":"乱掉头 乱掉头的。违法代码11211，11231，11232，罚款 200 元，记 1 分。 ","date":"2023-01-28","objectID":"/posts/traffic-violations-code/:3:1","tags":["Law"],"title":"常用交通违法代码","uri":"/posts/traffic-violations-code/"},{"categories":["Sharing"],"content":"违规变道 变更车道时影响正常行驶的机动车的。违法代码1043，罚款 200 元。 ","date":"2023-01-28","objectID":"/posts/traffic-violations-code/:3:2","tags":["Law"],"title":"常用交通违法代码","uri":"/posts/traffic-violations-code/"},{"categories":["Sharing"],"content":"不打转向灯 不按规定使用灯光的。违法代码11021，罚款 100 元，记 1 分。 ","date":"2023-01-28","objectID":"/posts/traffic-violations-code/:3:3","tags":["Law"],"title":"常用交通违法代码","uri":"/posts/traffic-violations-code/"},{"categories":["Sharing"],"content":"未让直行 转弯的机动车未让直行的车辆，行人先行的。违法代码13131，13132，记 3 分，罚款 100 元。 ","date":"2023-01-28","objectID":"/posts/traffic-violations-code/:3:4","tags":["Law"],"title":"常用交通违法代码","uri":"/posts/traffic-violations-code/"},{"categories":["Sharing"],"content":"禁止掉头 在禁止掉头的地点掉头的。违法代码11211，记 1 分，罚款 200 元。 ","date":"2023-01-28","objectID":"/posts/traffic-violations-code/:3:5","tags":["Law"],"title":"常用交通违法代码","uri":"/posts/traffic-violations-code/"},{"categories":["Sharing"],"content":"压实线，导流线 机动车违反禁止标线指示的。违法代码1117，罚款 100 元，记 1 分。 ","date":"2023-01-28","objectID":"/posts/traffic-violations-code/:3:6","tags":["Law"],"title":"常用交通违法代码","uri":"/posts/traffic-violations-code/"},{"categories":["Sharing"],"content":"杂项 ","date":"2023-01-28","objectID":"/posts/traffic-violations-code/:4:0","tags":["Law"],"title":"常用交通违法代码","uri":"/posts/traffic-violations-code/"},{"categories":["Sharing"],"content":"不礼让行人 不礼让行人的。违法代码70544，70546，13132，罚款 100 元，转弯不让额外记 3 分。 ","date":"2023-01-28","objectID":"/posts/traffic-violations-code/:4:1","tags":["Law"],"title":"常用交通违法代码","uri":"/posts/traffic-violations-code/"},{"categories":["Sharing"],"content":"不系安全带 不系安全带的。违法代码1120，3019，4101，驾驶人不系罚款 50 元，乘客不系罚款 20 元。 ","date":"2023-01-28","objectID":"/posts/traffic-violations-code/:4:2","tags":["Law"],"title":"常用交通违法代码","uri":"/posts/traffic-violations-code/"},{"categories":["Sharing"],"content":"打电话 驾驶时拨打接听手持电话的。违法代码1362，记 3 分，罚款 200 元。 ","date":"2023-01-28","objectID":"/posts/traffic-violations-code/:4:3","tags":["Law"],"title":"常用交通违法代码","uri":"/posts/traffic-violations-code/"},{"categories":["Sharing"],"content":"妨碍驾驶 驾车时有其他妨碍安全驾驶的行为的。违法代码1371，记 3 分，罚款 200 元 。 ","date":"2023-01-28","objectID":"/posts/traffic-violations-code/:4:4","tags":["Law"],"title":"常用交通违法代码","uri":"/posts/traffic-violations-code/"},{"categories":["密室"],"content":"和同学一起玩了 ACE 密室的 瓶中仙，这得吐槽吐槽，随便做点小小的测评总结","date":"2023-01-19","objectID":"/posts/ace-review-pin/","tags":["ACE","密室","Review"],"title":"密室小记 ACE 瓶中仙","uri":"/posts/ace-review-pin/"},{"categories":["密室"],"content":"Introduction 和同学一起玩了 ACE1 密室的 瓶中仙，这得吐槽吐槽，随便做点小小的测评总结。 ","date":"2023-01-19","objectID":"/posts/ace-review-pin/:1:0","tags":["ACE","密室","Review"],"title":"密室小记 ACE 瓶中仙","uri":"/posts/ace-review-pin/"},{"categories":["密室"],"content":"ACE ACE 沉浸式恐怖密室剧场，虽然和那个新冠病毒有关的 ACE 2 受体重名了，也确实是挺生草的。 ","date":"2023-01-19","objectID":"/posts/ace-review-pin/:1:1","tags":["ACE","密室","Review"],"title":"密室小记 ACE 瓶中仙","uri":"/posts/ace-review-pin/"},{"categories":["密室"],"content":"瓶中仙 按他们所说，这次主打的是机械机关，解密。 关于剧情，我不想讨论太多，不然就是剥夺没玩过的人的游戏体验了。 这是一个， 参加人数 4-8 人 最长游戏时间 1 小时 30 分 单人售价 88 CNY 的一个微恐副本。 在剧中你们差不多扮演某些个被劫匪胁迫的工作人员，帮它开锁「偷」个瓶子（其实不准确），结果这个瓶子的背后还有些牛鬼蛇神，祖宗祖先，凶杀结婚这类的故事剧情，你们的主要的剧情时间也就花在这上面。 剧本本身不是很恐怖，一点恐怖是来自于全黑和机关触发导致的响声，有时候会不小心被吓一跳。这一定程度上是因为空间不算大，而且缺少软装，使声波来回反射，音量出奇大，不过未必是一件坏事。 ","date":"2023-01-19","objectID":"/posts/ace-review-pin/:1:2","tags":["ACE","密室","Review"],"title":"密室小记 ACE 瓶中仙","uri":"/posts/ace-review-pin/"},{"categories":["密室"],"content":"Features 特性，这可能是是缺点也可能是优点。 首先，瓶中仙 并没有 NPC2。这可能是出于人力成本的考虑，也可以说是为了所谓纯机械的理念或者特色。 我觉得它融合了点侦探的元素在里面，似乎是想让你破案。 绝大多数是微光环境，有几次短暂的全黑。亮着的光一定程度上安排了你的动线，虽然这是基本操作。 ","date":"2023-01-19","objectID":"/posts/ace-review-pin/:2:0","tags":["ACE","密室","Review"],"title":"密室小记 ACE 瓶中仙","uri":"/posts/ace-review-pin/"},{"categories":["密室"],"content":"Pros 在我去的时候，我认为大厅的装修设计相当出色，比如光线明亮，整体的色调很协调，还有大量自动门等设计，外面看上去并不像个鬼屋，挺现代化。当然这是 ACE 的优点，不是剧本瓶中仙的优点。 对于服务而言，对讲机的质量和声音都很清楚，这是一个加分项。有休息和茶水的地方，这是一个不扣分项。有售卖各种饮料的地方，这是一个可选项。 对于剧本和场景，优点之一就是场景干净整洁，一方面是卫生，二方面是字面意思干净。没有容易绊倒你的障碍物，甚至在最初几个场景里连椅子都没有。有几个我认为挺有创造性的道具，就像触摸屏，确实有点意思。比如说有一个让你化妆的内容，你真可以通过电容笔蘸取物理意义上的化妆品，给虚拟的人脸上色。虽然原理很简单也不为奇，但是还挺好玩的，有心了。 便宜，88 元在同类产品里算是比较便宜的了。 ","date":"2023-01-19","objectID":"/posts/ace-review-pin/:3:0","tags":["ACE","密室","Review"],"title":"密室小记 ACE 瓶中仙","uri":"/posts/ace-review-pin/"},{"categories":["密室"],"content":"Cons 问题也是有的，首先，剧情相当割裂。我并不能清晰感到角色之间的切换，在这里主要是通过阅读和语音作为载体。正常情况下，这两种方式不宜传递过于复杂的内容。刚开始可能尚可，开局工作人员简单吟唱了一会，告诉我们是博物馆的「员工」。然后就开始剧情了，一开始你或许还能有些思路，但是之后的剧情就会使你怀疑，刚开始讲的「员工」角色是否还适用，自己是个观察者还是「员工」？至此就产生了疑惑了。随着故事继续发展，我觉得整个剧情设计应该是跌宕起伏，而且跨越了时间线，因为你从现代的博物馆，去到花瓶所包含的古代，又回到现代破案。如果不好好引导剧情，给出足够的信息，这通常会导致游客陷入混乱，也是我所经历的。很大一部分的注意力也被分散了，游戏体验自然差了。 缺乏有效引导。这和上面所讲的剧情割裂是相关的。比如在开头，你需要进入另一个房间。而此时你只知道你的身份和一段劫匪的语音。是不是蒙了？结果也确实蒙了，首先不止一个门，大概有 5 个，而且墙上也有装饰品，你很难确定是机关还是什么。于是乎就陷入迷思，最后不得不呼叫提示。这并不是第一次，后面还有五行相克，给监控画面排序，给证据拍照等剧情。都缺乏有效引导和提示，每一关都呼叫了数次提示，属实体验不佳。 交互界面并不友好。我上面说有触摸屏这样有创造性的产品，但是我还得说，这 UI 做得不是很好，比如给监控画面排序的时候也是在一个触摸屏上。但是你没法在同时比对图像和文字两个内容，又要点三次切换。搞错了又要重新操作，很是折磨。 解密动脑过于想当然，并没有充分考虑用户的角度。这和上面的那个给监控画面排序和给证据拍照。与其说证据不如说就是几个脚印和手印。而且很反直觉的是，要过关还要按照顺序来，暂且不追究为什么证据一定要按一个固定的顺序排列。这些印子简直抽象，你可以解释为打斗的痕迹，但是先前的内容让你认为劫匪去带枪的。于是你可能会疑惑着还能留下痕迹？然后那些个看上去是给光传感器的一撮孔，告诉我是弹孔？而且不多不少，还很密，这就很奇怪。槽点还要很多很多，我就不一样展开了。我有感觉，如果你是这个作者，拿着剧本做类似于阅读理解的题目，你肯定可以获得满分。不过问题是你是玩家，你未必能 Get 到作者的思路，而且按照作者的理解，你自然记得发生过的每一个故事和过程。 反常识。除了我在之前说的那个弹孔的例子，在接近结尾的时候，你要去派出所录笔录。其实就是做选择题，存在问题之一是和之前类似的缺少反馈，以及错了一个就要重新来过。并且没有正反馈，如果你只有一两个疑问，那么猜猜也无所谓，但是如果有几个过后，那就完全不一样了，每次尝试还要花费不少时间，而且每做一次就会再怀疑一次自己，有种考试罚抄的感觉了。更重要的，笔录作为一个现实中没有正确答案，只记录当事人的一种讲究公正的东西怎么能有正确答案呢？总不见得你做完笔录，警察跟你说，不对，改一下。那还得了，司法直接荡然无存。以及在开局的时候，你能想到一道门就门禁密码是房间号吗？正常人有这么做的吗。 ","date":"2023-01-19","objectID":"/posts/ace-review-pin/:4:0","tags":["ACE","密室","Review"],"title":"密室小记 ACE 瓶中仙","uri":"/posts/ace-review-pin/"},{"categories":["密室"],"content":"Recommend 那么我推荐大家去游玩 ACE 瓶中仙 吗？不推荐，非常不推荐。 单论这个主题而言，它设计得很糟糕。我认为非常致命的问题集中在， 剧情割裂 缺少引导 解密缺陷 剧情割裂和缺少引导，解密缺陷是分不开的。这是一个系统工程，显然 ACE 瓶中仙 这次并没有交出一道令人满意的答卷。 ","date":"2023-01-19","objectID":"/posts/ace-review-pin/:5:0","tags":["ACE","密室","Review"],"title":"密室小记 ACE 瓶中仙","uri":"/posts/ace-review-pin/"},{"categories":["密室"],"content":"Comment 个人觉得应该解决如上提到的问题。 对于剧情割裂的问题，其实按照设计理念，应该有多个线索，防止用户错过其中一两个造成卡关。或者过了一段时间后以某种方式进入下一关或者触发别的故事线，一样可以有很好的游戏体验。 在做和现实有关的内容时不能像做牛鬼蛇神时一样放飞自我，好歹要满足基本的常识逻辑。 虽说有屏幕交互是一个特性，但是我得说这还是 8 年前 4399 的水平，只能说是一个能用水平。 解密和推理应该在完成后，发布之前做足充分的测试，这在软件公司有完善成熟的开发流，我想 ACE 应该学习。 ACE 沉浸式恐怖密室剧场。 ↩︎ NPC 是 Non-player Character 的缩写，在密室中通常是说扮鬼或者其他角色的工作人员。 ↩︎ ","date":"2023-01-19","objectID":"/posts/ace-review-pin/:6:0","tags":["ACE","密室","Review"],"title":"密室小记 ACE 瓶中仙","uri":"/posts/ace-review-pin/"},{"categories":null,"content":"James' friends","date":"2023-01-18","objectID":"/friends/","tags":null,"title":"Friends","uri":"/friends/"},{"categories":null,"content":"\r","date":"2023-01-18","objectID":"/friends/:0:0","tags":null,"title":"Friends","uri":"/friends/"},{"categories":null,"content":"Friendly Reminder 如果你想申请添加友链，那么发我消息吧。越是良好设计的网站越有可能被采纳。 请以如下格式提交你的网站， - nickname: James avatar: https://jamesflare.com/site-logo.webp url: https://jamesflare.com/ description: James' Blog 可以通过邮件等方式联系我，最好附上一段简短的介绍。讲讲你网站的特色和吸引人的地方，如果是我的朋友，那么会是一个很大的加分项。 ","date":"2023-01-18","objectID":"/friends/:1:0","tags":null,"title":"Friends","uri":"/friends/"},{"categories":["Tutorials"],"content":"使用 Excel 绘制满足 IB Physic IA 的数据图表。在写 Physic IA（Internal Assessment）的时候，大家可能发现数据图表的评分挺复杂，你需要不少的内容才能获得满分数据图表。","date":"2023-01-16","objectID":"/posts/physic-ia-graph-excel/","tags":["Excel"],"title":"制作 Physic IA 中的数据图表","uri":"/posts/physic-ia-graph-excel/"},{"categories":["Tutorials"],"content":"Introduction 在写 Physic IA（Internal Assessment）1的时候，大家可能发现数据图表的评分挺复杂。 你需要不少的内容才能获得满分数据图表2， The Best Line of Fit for the Data Points The Mathematical Relationship Between your two Variables The Numerical Value of Gradient The Numerical Value of Intercept The Correlation Coefficient 不过也并不是非常困难，我们使用 Excel 就能完成这个任务。 明确一下我们要在 Excel 里绘制的内容， 离散图（Scatter） 数据点（Plot Markers） X轴标签（X Axis Title） Y轴标签（X Axis Title） 图标题（Graph Title） 误差框（Error Bar） 最贴合曲线（Best Fit Line） 最差贴合上限曲线（Max Fit Line） 最差贴合下限曲线（Min Fit Line） 曲线的公式（Equations） 至此就翻译成一个 ICT 方面的任务了。 ","date":"2023-01-16","objectID":"/posts/physic-ia-graph-excel/:1:0","tags":["Excel"],"title":"制作 Physic IA 中的数据图表","uri":"/posts/physic-ia-graph-excel/"},{"categories":["Tutorials"],"content":"Excel ","date":"2023-01-16","objectID":"/posts/physic-ia-graph-excel/:2:0","tags":["Excel"],"title":"制作 Physic IA 中的数据图表","uri":"/posts/physic-ia-graph-excel/"},{"categories":["Tutorials"],"content":"Graph Type 首先要明确应该使用哪种图表。通常是离散图（Scatter），这种图表会将所有数据标注在图表上。 ","date":"2023-01-16","objectID":"/posts/physic-ia-graph-excel/:2:1","tags":["Excel"],"title":"制作 Physic IA 中的数据图表","uri":"/posts/physic-ia-graph-excel/"},{"categories":["Tutorials"],"content":"Example Data 那我们随便用个例子做讲解吧， Try 1 Try 1 Try 2 Try 2 Try 3 Try 3 Temperature / ℃ ±5 Time / s ±2 Temperature / ℃ ±5 Time / s ±2 Temperature / ℃ ±5 Time / s ±2 4 3 6 7 2 1 9 10 11 15 9 11 10 15 12 21 10 15 14 24 16 31 12 27 16 30 18 35 17 30 21 41 23 39 18 35 22 45 22 45 22 44 26 55 24 55 21 45 28 60 28 60 26 50 30 62 30 65 26 55 32 70 34 75 30 67 34 75 37 81 32 70 38 86 38 84 34 75 40 90 40 90 36 81 42 94 42 94 42 94 44 99 44 99 45 100 在这个例子里，实验重复了三次（实际中可能不够，我们只做一个演示）。 且定实验的目的是证明某个东西的温度变化和时间成正比例，$Temperature \\propto Time$，也就是我们最后应该得到一个 Linear 的图像。 ","date":"2023-01-16","objectID":"/posts/physic-ia-graph-excel/:3:0","tags":["Excel"],"title":"制作 Physic IA 中的数据图表","uri":"/posts/physic-ia-graph-excel/"},{"categories":["Tutorials"],"content":"Example Scatter 这是最终的成品效果， Example Scatter\r那我们来看看是如何一步一步制作的吧。 ","date":"2023-01-16","objectID":"/posts/physic-ia-graph-excel/:4:0","tags":["Excel"],"title":"制作 Physic IA 中的数据图表","uri":"/posts/physic-ia-graph-excel/"},{"categories":["Tutorials"],"content":"How to Make 接下来我将逐步演示，从头到尾构建此图表的过程。 ","date":"2023-01-16","objectID":"/posts/physic-ia-graph-excel/:5:0","tags":["Excel"],"title":"制作 Physic IA 中的数据图表","uri":"/posts/physic-ia-graph-excel/"},{"categories":["Tutorials"],"content":"Import Data Check List，到现在为止，我们完成了， 离散图（Scatter） 数据点（Plot Markers） X轴标签（X Axis Title） Y轴标签（X Axis Title） 图标题（Graph Title） 误差框（Error Bar） 最贴合曲线（Best Fit Line） 最差贴合上限曲线（Max Fit Line） 最差贴合下限曲线（Min Fit Line） 曲线的公式（Equations） 本节让我们准备操作，离散图（Scatter）。 首先我们需要把数据导入 Excel， Enter Data Into Excel\r这其实不太讲究，实在不行一个一个手打也行，这里我用 Example Data 里的数据。 再次提醒，在真实的 IA 中，建议有 5 次重复的实验的数据，3 次可能不够，我们这里只是演示 ICT 技术用，无需过多要求。 可能会好奇，这里有多列数据怎么办？一种方法是把他们重新组织合并成两列，但是这样有多列也不要紧，我选择的方法是第二种，选择数据源Data Source的时候指定多列，这部分在后面有详细讲述。 ","date":"2023-01-16","objectID":"/posts/physic-ia-graph-excel/:5:1","tags":["Excel"],"title":"制作 Physic IA 中的数据图表","uri":"/posts/physic-ia-graph-excel/"},{"categories":["Tutorials"],"content":"Insert Scatter Graph Check List，到现在为止，我们完成了， 离散图（Scatter） 数据点（Plot Markers） X轴标签（X Axis Title） Y轴标签（X Axis Title） 图标题（Graph Title） 误差框（Error Bar） 最贴合曲线（Best Fit Line） 最差贴合上限曲线（Max Fit Line） 最差贴合下限曲线（Min Fit Line） 曲线的公式（Equations） 本节让我们操作，离散图（Scatter）。 选一个对的图表类型是很重要的，绝大多数情况我们需要的是 Scatter（离散图）。 Insert Scatter Graph\r选好图表类型，点OK确认。 Raw Scatter Graph\r现在差不多应该是这样的一个画面。 看到有点不对劲是吧，怎么花花绿绿，而且关键的元素怎么都没有，不急，慢慢来。 ","date":"2023-01-16","objectID":"/posts/physic-ia-graph-excel/:5:2","tags":["Excel"],"title":"制作 Physic IA 中的数据图表","uri":"/posts/physic-ia-graph-excel/"},{"categories":["Tutorials"],"content":"Config Best Fit Data Check List，到现在为止，我们完成了， 离散图（Scatter） 数据点（Plot Markers） X轴标签（X Axis Title） Y轴标签（X Axis Title） 图标题（Graph Title） 误差框（Error Bar） 最贴合曲线（Best Fit Line） 最差贴合上限曲线（Max Fit Line） 最差贴合下限曲线（Min Fit Line） 曲线的公式（Equations） 本节让我们操作，数据点（Plot Markers）。 首先我们需要让图表读取正确的数据集， Select Scatter GraphData\r我们右键图表，选择Select Data选择数据。 Select Scatter Graph Data Source\rSelect Data Source选择数据源界面是帮助我们标定所需绘制的数据的。 可以看到原先是自动把 3 组数据分成了 3 个分离的Series集。而我们希望它们都在一个Series里，这样就拥有统一的颜色。 首先点击Remove移除原先的所有数据集，然后我们选择Add添加。 Select Scatter Graph Data Source For X\r它会询问你Series名，Series X Values,Series Y Values。 这里我希望 X 轴是时间，Y 轴是温度。注意的是，选择多个 Table 时可以按住Ctrl按键，框选多个列表。MacOS 可能是Command键。你也可以选择手动整合多个列表。每个 Sheet 之间用,作为分割。其实在你使用Ctrl多选时，Excel 自动帮你做好了这件事。 =(Sheet1!$B$3:$B$18,Sheet1!$D$3:$D$18,Sheet1!$F$3:$F$18) 这是 Example 中所用的表达公式。可以看见，结构是， =(列表1,列表2,列表3) 大家在操作时注意就好，当报错时记得回头检查。 Select Scatter Graph Data Source For Y\r对于Series Y Values，操作是接近的。 不过有一点，默认会有一个={1}的值，如果不删掉直接在后方添加会导致错误，请注意。 Check Selected Scatter Graph Data Source\r到这，3 个项Series名，Series X Values,Series Y Values都填写好了。 Series名是可选的，但是为了方便区分，还是建议大家填一个。 Check Selected Scatter Graph Data\r这是完成后的样子。 完成一定要点OK确认，不然就白忙活了。 ","date":"2023-01-16","objectID":"/posts/physic-ia-graph-excel/:5:3","tags":["Excel"],"title":"制作 Physic IA 中的数据图表","uri":"/posts/physic-ia-graph-excel/"},{"categories":["Tutorials"],"content":"Config Error Bars Check List，到现在为止，我们完成了， 离散图（Scatter） 数据点（Plot Markers） X轴标签（X Axis Title） Y轴标签（X Axis Title） 图标题（Graph Title） 误差框（Error Bar） 最贴合曲线（Best Fit Line） 最差贴合上限曲线（Max Fit Line） 最差贴合下限曲线（Min Fit Line） 曲线的公式（Equations） 本节让我们操作，误差框（Error Bar）。 添加误差框不是一件难事，一种办法是从Chart Design，Add Chart Element中添加 Make Error Bar for Best Fit Line\r选择Standard Error。这时可能发现它们的尺寸不太对，不要紧。 Select X Error Bar\r点击图表中的误差线打开菜单。如果没到正确的地方，可以手动选择，这里我们先处理 X 轴方向的误差框。 Config X Error Bar Fixed Value\rX 轴在 Example 中是 Time 时间，Time 时间的误差范围我们先前在表格中有体现（省去数值）。 Temperature / ℃ ±5 Time / s ±2 \u003cValue\u003e \u003cValue\u003e Time的误差为±2，这里为了效果定了一个很高的数值，实际不是这样的。 提醒\r接下来很长一段都是讲述 Uncertainties​ 的内容，如果你自认为完全理解，那么可以跳过，直接到 Error Bar 设置部分。\r这可能是要经过计算的，我想这在正常的 IB Physic 课程中有所讲述， Topic 1: Measurement and Uncertainties​ 如果不确定，那我们简述一下。 首先，误差分为三种。 Absolute Uncertainty: $\\Delta x$ Fractional Uncertainty: $\\cfrac{\\Delta x}{x}$ Percentage Uncertainty: $\\cfrac{\\Delta x}{x} \\times 100 \\%$ 我们日常能碰到的基本上就是， Absolute Uncertainty: $\\Delta x$ Percentage Uncertainty: $\\cfrac{\\Delta x}{x} \\times 100 \\%$ 如果我的数据是计算出来的，比如我实验测电流（$I$）3和电压（$V$）4，但是我图表要绘制功率（$P$）5。那么功率（$P$）的 Error Bar 要怎么绘制呢？ 这种情况需要先算出功率（$P$）的误差（Uncertainty）。 功率为 $P = IV$ 6，其是两个数值相乘。 Addition/Subtraction Form: $y = a \\pm b$ Uncertainty: $\\Delta y = \\Delta a + \\Delta b$ (sum of absolute uncertainties) Multiplication/Division Form: $y = a \\times b$ or $y = \\cfrac{a}{b}$ Uncertainty: $\\cfrac{\\Delta y}{y} = \\cfrac{\\Delta a}{a} + \\cfrac{\\Delta b}{b}$ (sum of fractional uncertainties) Power Form: $y = a^n$ Uncertainty: $\\cfrac{\\Delta y}{y} = | n | \\bigg( \\cfrac{\\Delta a}{a} \\bigg)$ (|n| times of fractional uncertainty) 这样的话就属于 Multiplication/Division，重新构造一下公式，把我们的 $P = IV$ 纳入。 这样就得到了 $\\cfrac{\\Delta P}{P} = \\cfrac{\\Delta I}{I} + \\cfrac{\\Delta V}{V}$。 接下来我们得到 $\\Delta I$ 和 $\\Delta V$ 就可以算出 $\\Delta P$ 了。而这两个的值一般取决于仪表，如果制造商没有标注，那就是最后一位读数的精度。不过有些例外，比如实验中是通过人来掐秒表计时，那么公认的人类反应时间是 200 毫秒，即使秒表再精准，也不该使用标注值，应该使用 $\\pm 200 ms $ 作为 Uncertainty。永远使用最不准的一个来作为衡量。 注意，制造商可能会标注 $\\pm 1 \\%$ 这样的数值，那么它本身就是 Percentage Uncertainty，直接把它转换为 Fractional Uncertainty 即可，还记得上方的 $\\cfrac{\\Delta P}{P} = \\cfrac{\\Delta I}{I} + \\cfrac{\\Delta V}{V}$ 吗？它的 RHS7中，每一个项和上面展示的 Fractional Uncertainty 公式 $\\cfrac{\\Delta x}{x}$ 完全一样。如果不明白两个之间是怎么转换的，为什么就可以直接用了？那么想想，我们说的百分比 %，是不是就是百分之几，$\\cfrac{x}{100}$ 的意思？ 同时也不要搞混了，$\\Delta x$ 的意思是 $x$ 的变化，比如 $+ 1$，$- 1$ 或者 $\\pm 1$。而 $\\pm 1 \\%$ 显然不能算数。 假设我们使用的电流表的标注是 $\\pm 1 \\%$（这在现实中不太可能发生，为了演示）。同时假设电压表没有标注，但是它是数字式的，某个读数长这样 $1145.14 V$，那么它的 Uncertainty 就是 $\\pm 0.01 A$。 最后假设现在某一组数据的值是 $I = 2.01$，$V = 1.51$，通过 $P = IV$ 得到 $P = 3.0351$。这显然是不正确的，因为有效数字位数（Significant Figures）8，和精度都对不上。换一句话说，它缺少误差（Uncertainty）。 要算出 Uncertainty，把内容带入公式，得到 $\\cfrac{\\Delta P}{3.0351} = \\cfrac{1}{100} + \\cfrac{0.01}{1.51}$。如果你计算正确的话，就会得到 $\\Delta P = 0.05045$。但是不能直接写 $P = 3.0351 \\pm 0.05045 W$，这样是不对的，因为有效数字（Significant Figures）的位数不正确。 这我就简单讲述一下规则， 首先，读数的精度不能高于误差 看起来是废话，其实我是说，类似 $11.4514 \\pm 0.1$ 这样的情况是不能出现的。 因为 11.4514 的精度是 0.0001，而误差是 0.1，这显然是不可接受的。修正一下就是 $11.5 \\pm 0.1$。 其次，误差只能有一位有效数字 什么是有效数字？我这里暂时不会论述，因为会搞得文章过于杂乱，这应该在物理和数学中都有提及。 举个例子，$1145.14 \\pm 0.114$ 这个写法就是错误的，因为 0.114 有三位有效数字（Significant Figures），修正一下应该是 $1145.14 \\pm 0.1$。 然后发现这也不对，因为上面说过，读数的精度不能高于误差，于是再次修改 $1145.1 \\pm 0.1$ 这就是最终结果。 如果一个结果两个问题都存在，那么按照以下顺序修正 误差只能有一位有效数字 读数的精度不能高于误差 回到上文的例子，结果 $P = 3.0351 \\pm 0.05045 W$ 经过修正，会得到 $P = 3.04 \\pm 0.05 W$，这便是正确的结果。 是不是兴奋地以为把 0.05 填到 Excel 里就万事大吉了？哈哈，小子，还没结束，希望心态别炸。 这只是一个数值，而画图用的是图表，显然我们不太能给每一个点设置 Error Bar，所以我们用的是图表中，所有值的一个普遍的 Uncertainty，也就是表格顶端所标注的。 Temperature / ℃ ±5 Time / s ±2 \u003cValue\u003e \u003cValue\u003e 在我的例子中，很简单，因为这两个数值是我测量得来的，而且是一个 Absolute Uncertainty，直接照抄，搬入 Excel 的Error Amount，Fixed Value即可。可是如果我们的 Uncertainty 是一个 Percentage Uncertainty，或者这个项是计算出来的，而非直接测量获得的。比如说上文举例的功率，它就是由两个原始测量值相乘获得的，这样每个数值的 Absolute Uncertainty 都不一样。那我们怎么确立，像 Temperature / ℃ ±5 中，±5 一样的 Uncertainty 填入 Excel 中呢？ 不急，我们可以先统计每一个数值的 Absolute Uncertainty，再计算最大值和最小值之间的差，然后除以 2，也就是所谓的 Half Range。 什么意思呢，比如我有 {1,1,2,3,1,4,2,4} 这几个值，那它们的 Half Range 就是 $(4 - 1) \\div 2 = 1.5$。 什么？你说我之前算一个 $P = 3.04 \\pm 0.05 W$ 得到它 0.05 的 Absolute Uncertainty 就花了那么多功夫","date":"2023-01-16","objectID":"/posts/physic-ia-graph-excel/:5:4","tags":["Excel"],"title":"制作 Physic IA 中的数据图表","uri":"/posts/physic-ia-graph-excel/"},{"categories":["Tutorials"],"content":"Add Axis Titles Check List，到现在为止，我们完成了， 离散图（Scatter） 数据点（Plot Markers） X轴标签（X Axis Title） Y轴标签（X Axis Title） 图标题（Graph Title） 误差框（Error Bar） 最贴合曲线（Best Fit Line） 最差贴合上限曲线（Max Fit Line） 最差贴合下限曲线（Min Fit Line） 曲线的公式（Equations） 本节让我们操作，X轴标签（X Axis Title），Y轴标签（X Axis Title）。 首先我们添加两个轴标题的元素， Add Axis Titles\r在这之后双击文本框修改其中的内容，包括样式，位置等。 Change Axis Titles\r这样就完成了。 ","date":"2023-01-16","objectID":"/posts/physic-ia-graph-excel/:5:5","tags":["Excel"],"title":"制作 Physic IA 中的数据图表","uri":"/posts/physic-ia-graph-excel/"},{"categories":["Tutorials"],"content":"Add Graph Title Check List，到现在为止，我们完成了， 离散图（Scatter） 数据点（Plot Markers） X轴标签（X Axis Title） Y轴标签（X Axis Title） 图标题（Graph Title） 误差框（Error Bar） 最贴合曲线（Best Fit Line） 最差贴合上限曲线（Max Fit Line） 最差贴合下限曲线（Min Fit Line） 曲线的公式（Equations） 本节让我们操作，图标题（Graph Title）。 和修改轴标题一样简单，直接双击标题文本框修改。 Change Graph Title\r如果没有标题文本框，那可以像添加轴标题一样添加图标题元素Element。 ","date":"2023-01-16","objectID":"/posts/physic-ia-graph-excel/:5:6","tags":["Excel"],"title":"制作 Physic IA 中的数据图表","uri":"/posts/physic-ia-graph-excel/"},{"categories":["Tutorials"],"content":"Add Fit Line Check List，到现在为止，我们完成了， 离散图（Scatter） 数据点（Plot Markers） X轴标签（X Axis Title） Y轴标签（X Axis Title） 图标题（Graph Title） 误差框（Error Bar） 最贴合曲线（Best Fit Line） 最差贴合上限曲线（Max Fit Line） 最差贴合下限曲线（Min Fit Line） 曲线的公式（Equations） 本节让我们操作，最贴合曲线（Best Fit Line），最差贴合上限曲线（Max Fit Line），最差贴合下限曲线（Min Fit Line）。 在添加之前我们先要计算出 Max Fit Line，Min Fit Line. Calculate Max Fit Points\r我们可以理解为两个极值连接的一条曲线，而这条曲线是其中最陡峭的一个。 因为只要确定两点即可确定一条直线，我们只要算出那两个点即可。如果没理解的话我稍微列个表格， Max Fit Line Series Y Values Series X Values Y Min - Absolute Uncertainty X Min - Absolute Uncertainty Y Max + Absolute Uncertainty X Max + Absolute Uncertainty 同理可得， Min Fit Line Series Y Values Series X Values Y Min + Absolute Uncertainty X Min + Absolute Uncertainty Y Max - Absolute Uncertainty X Max - Absolute Uncertainty Add Fit Line Data Source\r在算完两条线，四个点，八个值后，把这两组数据分别加入图表，可以参照 Config Best Fit Data 章节操作。 Check Data Source\r操作完差不多是这样，记得按OK保存。 至此，我们的工作还未结束，因为现在一切东西都是数据点，并不是我们想要的曲线。 Add Trendlines\r而添加曲线也很简单，Excel 把它称作趋势线（Trendline）。 瞄准数据点右键，Add Trendline即可。 ","date":"2023-01-16","objectID":"/posts/physic-ia-graph-excel/:5:7","tags":["Excel"],"title":"制作 Physic IA 中的数据图表","uri":"/posts/physic-ia-graph-excel/"},{"categories":["Tutorials"],"content":"Add Equations Check List，到现在为止，我们完成了， 离散图（Scatter） 数据点（Plot Markers） X轴标签（X Axis Title） Y轴标签（X Axis Title） 图标题（Graph Title） 误差框（Error Bar） 最贴合曲线（Best Fit Line） 最差贴合上限曲线（Max Fit Line） 最差贴合下限曲线（Min Fit Line） 曲线的公式（Equations） 本节让我们操作，曲线的公式（Equations）。 Config Trendlines\r点击曲线打开配置页面，把Display Equation on chart勾选上，这样就会显示曲线的公式了。 其余的选项，比如是线性（Linear），指数（Exponential）等就按自己需要了。我在一开始就假定这个例子是线性的关系，所以选Linear即可。 Preview Trendlines\r如法炮制，把剩下几个曲线也添加完，然后双击编辑公式的文本框，在它们前面加上标注。 顺手把底下不需要的 Label 删除。 ","date":"2023-01-16","objectID":"/posts/physic-ia-graph-excel/:5:8","tags":["Excel"],"title":"制作 Physic IA 中的数据图表","uri":"/posts/physic-ia-graph-excel/"},{"categories":["Tutorials"],"content":"Ending Work 现在，所有必要工作已经完成， 离散图（Scatter） 数据点（Plot Markers） X轴标签（X Axis Title） Y轴标签（X Axis Title） 图标题（Graph Title） 误差框（Error Bar） 最贴合曲线（Best Fit Line） 最差贴合上限曲线（Max Fit Line） 最差贴合下限曲线（Min Fit Line） 曲线的公式（Equations） 在拿去用之前建议， Final Work\r调整一下颜色，字体，位置等美化一下。 这就是最终成品了，拥有所有我们要的元素，满分图表了。 ","date":"2023-01-16","objectID":"/posts/physic-ia-graph-excel/:5:9","tags":["Excel"],"title":"制作 Physic IA 中的数据图表","uri":"/posts/physic-ia-graph-excel/"},{"categories":["Tutorials"],"content":"Source File 这是 Excel 原文件，可以拿去研究 example.xlsx\r/posts/physic-ia-graph-excel/example.xlsx\r","date":"2023-01-16","objectID":"/posts/physic-ia-graph-excel/:6:0","tags":["Excel"],"title":"制作 Physic IA 中的数据图表","uri":"/posts/physic-ia-graph-excel/"},{"categories":["Tutorials"],"content":"Reference The EXACT Structure And Subtitles You Should Use In Your IB Physics Internal Assessment [Updated for 2023] Topic 1: Measurement and uncertainties​ IA的全称是 Internal Assessment ↩︎ 此内容来源于 引用1 ↩︎ 电流的物理符号是 $I$ ↩︎ 电压的物理符号是 $V$ ↩︎ 功率的物理符号是 $P$ ↩︎ 功率的计算公式之一是：电流 $\\times$ 电压 ↩︎ RHS（Right Hand Side） ↩︎ 有效数字位数的英文为 Significant Figures。 ↩︎ LHS（Left Hand Side） ↩︎ ","date":"2023-01-16","objectID":"/posts/physic-ia-graph-excel/:7:0","tags":["Excel"],"title":"制作 Physic IA 中的数据图表","uri":"/posts/physic-ia-graph-excel/"},{"categories":["Tutorials"],"content":"Gravatar 的头像服务在中国大陆不稳定。除了使用一些公开镜像，我们还能自行建立反代。不过如果要自己建立反代，就需要服务器，这可能需要额外的成本，更重要的一个问题是，一般人的服务器只能在一个机房，所以地区之间的速度差异会很大，而不像 Gravatar 在全球都有 CDN。","date":"2023-01-15","objectID":"/posts/gravatar-cloudflare-workers/","tags":["CloudFlare","JavaScript"],"title":"使用 CloudFlare Workers 反向代理","uri":"/posts/gravatar-cloudflare-workers/"},{"categories":["Tutorials"],"content":"Introduction 在中国大陆 Gravatar 的头像服务一直处于不稳定，不可用的状态。除了使用一些公开服务，我们还能自行建立反代。 不过如果要自己建立反代，就需要服务器，这可能需要额外的成本，更重要的一个问题是，一般人的服务器只能在一个机房，所以地区之间的速度差异会很大，而不像 Gravatar 在全球都有 CDN。 我希望全球的用户加载速度都很快，退一万步说，用户挂的代理也可能遍布全球，是吧。 CloudFlare Network Map\r而 CloudFlare Workers 直接可以在他们就近的数据中心处理，不比随便整一个服务器快多了。 ","date":"2023-01-15","objectID":"/posts/gravatar-cloudflare-workers/:1:0","tags":["CloudFlare","JavaScript"],"title":"使用 CloudFlare Workers 反向代理","uri":"/posts/gravatar-cloudflare-workers/"},{"categories":["Tutorials"],"content":"Pricing 那么，Workers 的价格如何? Free plan Paid Plan - Bundled Paid plan - Unbound Requests 100,000 / day 10 million / month, +$0.50/million 1 million / month, + $0.15/million Duration 10ms CPU time / invocation 50 ms CPU time / invocation 400,000 GB-s, + $12.50/million GB-s 答，一般免费计划完全够用。 每天有 10 万次免费请求，基本上是用不完的。10ms 的 CPU 时间，这也是足够的，我们的代码估计也就 1ms 的时间。 退一万步，就算是要付钱，由于不需要 Workers KV，Queues，Durable Objects 等产品，只要单纯的请求数，也就是 Paid plan - Unbound。100 万次也就 $0.15，一元人民币的样子，巨便宜好吧。 ","date":"2023-01-15","objectID":"/posts/gravatar-cloudflare-workers/:2:0","tags":["CloudFlare","JavaScript"],"title":"使用 CloudFlare Workers 反向代理","uri":"/posts/gravatar-cloudflare-workers/"},{"categories":["Tutorials"],"content":"Calculation 图片算 30KB 一张的话，100 万张也就是 28.6G 流量，算上 VPS 可能是双向计算流量的，那就是 57.2G 的样子。 57G/元的价格放到 VPS 领域，可以说是中等水平，不算便宜，毕竟还有无限流量，俄罗斯 VPS 什么的不是？但是考虑到线路的水平，和全球的数据中心，这直接杀爆了。 CloudFlare 的速度也不是什么俄罗斯小鸡可以比的，如果是 CN2 这样的高级线路，那这个价格肯定是买不到的。 ","date":"2023-01-15","objectID":"/posts/gravatar-cloudflare-workers/:2:1","tags":["CloudFlare","JavaScript"],"title":"使用 CloudFlare Workers 反向代理","uri":"/posts/gravatar-cloudflare-workers/"},{"categories":["Tutorials"],"content":"Workers JS 使用方法很简单，基本上就是 JavaScript。 我们小小构造一下， addEventListener( \"fetch\", event =\u003e { let url = new URL(event.request.url); url.hostname = \"www.gravatar.com\"; url.protocol = \"https\"; let request = new Request(url, event.request); event.respondWith( fetch(request) ) } ) 逻辑说白了就是返回以 https 请求收到的请求 URL，不过把请求时候发的hostname改成www.gravatar.com。 ","date":"2023-01-15","objectID":"/posts/gravatar-cloudflare-workers/:3:0","tags":["CloudFlare","JavaScript"],"title":"使用 CloudFlare Workers 反向代理","uri":"/posts/gravatar-cloudflare-workers/"},{"categories":["Tutorials"],"content":"Deploy 使用方法也很简单，在 CloudFlare 的 Workers 面板新建一个 Service。 把上面这个抄到里面，并且 Deploy。 ","date":"2023-01-15","objectID":"/posts/gravatar-cloudflare-workers/:3:1","tags":["CloudFlare","JavaScript"],"title":"使用 CloudFlare Workers 反向代理","uri":"/posts/gravatar-cloudflare-workers/"},{"categories":["Tutorials"],"content":"Custom Domains 默认会给你一个 workers.dev 的三级域名，如果你想用也完全没有问题，但是我希望设置一个自己的域名。 我们进入 Service，到 Trigger，点 Add Custom Domains，输入你需要的域名。 比如我选择 gravatar.jamesflare.com，那就输入gravatar.jamesflare.com。 ","date":"2023-01-15","objectID":"/posts/gravatar-cloudflare-workers/:4:0","tags":["CloudFlare","JavaScript"],"title":"使用 CloudFlare Workers 反向代理","uri":"/posts/gravatar-cloudflare-workers/"},{"categories":["Tutorials"],"content":"Testing 那我们测试一下，看看能不能用，这里用我头像测试/avatar/75cea16f157b9c5da5435379ab6cf294?s=32\u0026d=。 构造一下， https://gravatar.jamesflare.com/avatar/75cea16f157b9c5da5435379ab6cf294?s=32\u0026d= 可以看到，是没问题的。 ","date":"2023-01-15","objectID":"/posts/gravatar-cloudflare-workers/:5:0","tags":["CloudFlare","JavaScript"],"title":"使用 CloudFlare Workers 反向代理","uri":"/posts/gravatar-cloudflare-workers/"},{"categories":["Tutorials"],"content":"Use in Hugo 这属于衍生部分，其实过程相对曲折，而且不同主题可能还不一样，所以我希望记录一下思路而不是直接说结果，毕竟方案可能不通用。 我用的主题是 FixIt，约等于 LoveIt。 ","date":"2023-01-15","objectID":"/posts/gravatar-cloudflare-workers/:6:0","tags":["CloudFlare","JavaScript"],"title":"使用 CloudFlare Workers 反向代理","uri":"/posts/gravatar-cloudflare-workers/"},{"categories":["Tutorials"],"content":"Find Template File 通过查找，发现负责文章作者头像的模板位于/FixIt/layouts/partials/single/post-author.html 代码如下， {{- $params := .Scratch.Get \"params\" -}} {{- $author := .Site.Author | merge (dict \"name\" \"Anonymous\" \"link\" (echoParam $params \"authorlink\") \"email\" (echoParam $params \"authoremail\")) -}} {{- $avatar := .Site.Params.home.profile.avatarURL -}} {{- if isset $params \"author\" | and (ne $params.author .Site.Author.name) -}} {{- $author = dict \"name\" $params.author | merge $author -}} {{- $author = dict \"link\" (echoParam $params \"authorlink\") | merge $author -}} {{- $author = dict \"email\" (echoParam $params \"authoremail\") | merge $author -}} {{- $avatar = \"\" -}} {{- end -}} {{- if (not $avatar | or $params.gravatarForce) | and $author.email -}} {{- $gravatar := .Site.Params.gravatar -}} {{- with $gravatar -}} {{- $avatar = printf \"https://%v/avatar/%v?s=32\u0026d=%v\" (path.Clean .Host | default \"www.gravatar.com\") (md5 $author.email) (.Style | default \"\") -}} {{- end -}} {{- end -}} \u003cspan class=\"post-author\"\u003e {{- $content := $author.name -}} {{- $icon := dict \"Class\" \"fa-solid fa-user-circle\" -}} {{- if $avatar -}} {{- $content = printf \"%v\u0026nbsp;%v\" (dict \"Src\" $avatar \"Class\" \"avatar\" \"Alt\" $author.name | partial \"plugin/image.html\") $author.name -}} {{- $icon = \"\" -}} {{- end -}} {{- if $author.link -}} {{- $options := dict \"Class\" \"author\" \"Destination\" $author.link \"Title\" (T \"single.author\") \"Rel\" \"author\" \"Icon\" $icon \"Content\" $content -}} {{- partial \"plugin/link.html\" $options -}} {{- else -}} \u003cspan class=\"author\"\u003e {{- with $icon -}} {{ . | partial \"plugin/icon.html\" }} {{ end -}} {{- $content | safeHTML -}} \u003c/span\u003e {{- end -}} \u003c/span\u003e {{- /* EOF */ -}} ","date":"2023-01-15","objectID":"/posts/gravatar-cloudflare-workers/:6:1","tags":["CloudFlare","JavaScript"],"title":"使用 CloudFlare Workers 反向代理","uri":"/posts/gravatar-cloudflare-workers/"},{"categories":["Tutorials"],"content":"Find Code Section 如下片段是负责头像的 {{- if (not $avatar | or $params.gravatarForce) | and $author.email -}} {{- $gravatar := .Site.Params.gravatar -}} {{- with $gravatar -}} {{- $avatar = printf \"https://%v/avatar/%v?s=32\u0026d=%v\" (path.Clean .Host | default \"www.gravatar.com\") (md5 $author.email) (.Style | default \"\") -}} {{- end -}} {{- end -}} 可以看见它判定配置文件 params 项下 gravatar 子项，Host 项下的值。 如果 Host 项是空，则默认www.gravatar.com。 那么很简单，有两种思路，一个是修改这个 HTML 模板本身，还有一个思路是修改配置文件的值。 ","date":"2023-01-15","objectID":"/posts/gravatar-cloudflare-workers/:6:2","tags":["CloudFlare","JavaScript"],"title":"使用 CloudFlare Workers 反向代理","uri":"/posts/gravatar-cloudflare-workers/"},{"categories":["Tutorials"],"content":"Make .toml Config 我选第二种。 我的配置文件是 .toml 格式的，稍微构造一下。 [params] [params.gravatar] host = \"gravatar.jamesflare.com\" ","date":"2023-01-15","objectID":"/posts/gravatar-cloudflare-workers/:6:3","tags":["CloudFlare","JavaScript"],"title":"使用 CloudFlare Workers 反向代理","uri":"/posts/gravatar-cloudflare-workers/"},{"categories":["Tutorials"],"content":"Preview in Browser 重新生成一下站点，这里我只要预览即可， hugo server -D -e production --disableFastRender 打开浏览器访问http://localhost:1313/，查看一下 HTML 源码有关部分。 data-src=\"https://gravatar.jamesflare.com/avatar/75cea16f157b9c5da5435379ab6cf294?s=32\u0026amp;d=\" data-srcset=\"https://gravatar.jamesflare.com/avatar/75cea16f157b9c5da5435379ab6cf294?s=32\u0026amp;d=, https://gravatar.jamesflare.com/avatar/75cea16f157b9c5da5435379ab6cf294?s=32\u0026amp;d= 1.5x, https://gravatar.jamesflare.com/avatar/75cea16f157b9c5da5435379ab6cf294?s=32\u0026amp;d= 2x\" 可以看到已经改过来了，通过浏览器开发工具 Sources 栏也可以验证。 ","date":"2023-01-15","objectID":"/posts/gravatar-cloudflare-workers/:6:4","tags":["CloudFlare","JavaScript"],"title":"使用 CloudFlare Workers 反向代理","uri":"/posts/gravatar-cloudflare-workers/"},{"categories":["Tutorials"],"content":"Others 小插曲，FixIt 的配置文件原来已经有这项了，小丑原来是我自己，不过全网都搜不到，哭了。 [params] [params.gravatar] # Gravatar host, default: \"www.gravatar.com\" host = \"www.gravatar.com\" # [\"cn.gravatar.com\", \"gravatar.loli.net\", ...] style = \"\" # [\"\", \"mp\", \"identicon\", \"monsterid\", \"wavatar\", \"retro\", \"blank\", \"robohash\"] ","date":"2023-01-15","objectID":"/posts/gravatar-cloudflare-workers/:6:5","tags":["CloudFlare","JavaScript"],"title":"使用 CloudFlare Workers 反向代理","uri":"/posts/gravatar-cloudflare-workers/"},{"categories":["Games"],"content":"战舰世界群友赛 B 队计划，每场比赛最长时间为 20 分钟，若出现平局，则进行重赛，请大家在比赛开始前 25 分钟进场。使用船只为 X 级战舰，8 VS 8 每方 1CV、3BB、3CA/CL、2DD。","date":"2023-01-14","objectID":"/posts/wows-8vs8/","tags":["WoWs"],"title":"战舰世界 8 VS 8 计划","uri":"/posts/wows-8vs8/"},{"categories":["Games"],"content":"前情提要 既定时间：2023 年 1 月 15 日，下午 14:00 ","date":"2023-01-14","objectID":"/posts/wows-8vs8/:1:0","tags":["WoWs"],"title":"战舰世界 8 VS 8 计划","uri":"/posts/wows-8vs8/"},{"categories":["Games"],"content":"地图池\u0026模式 阶段 8 VS 8，三局两胜队伍晋级 沉睡的巨人、统治模式 北极光、三区域统治 崇山峻岭、标准战+气旋 阶段 4 VS 4，单局，获胜队伍晋级 隔海相望，标准战、无气旋 阶段 2 VS 2，单局，获胜队伍晋级 河口，标准战、无气旋 阶段 1 VS 1，单局，获胜者为最终赢家 海洋、无点位模式 ","date":"2023-01-14","objectID":"/posts/wows-8vs8/:1:1","tags":["WoWs"],"title":"战舰世界 8 VS 8 计划","uri":"/posts/wows-8vs8/"},{"categories":["Games"],"content":"比赛规则 每场比赛最长时间为 20 分钟，若出现平局，则进行重赛，请大家在比赛开始前 25 分钟进场 使用船只为 X 级战舰， 8 VS 8 每方 1CV、3BB、3CA/CL、2DD 4 VS 4 每方 1BB、2CA/CL、1DD 2 VS 2 及 1 VS 1模式中，可任意使用 BB/CA/CL，双方不要求对称 本次比赛谢绝 SS 水下小人参赛 8 VS 8 模式比赛开始前 5 分钟，进入 Ban 阶段，该阶段内，由双方领队与队员商议，开始先由比赛裁判抽签决定从一方开始禁用船只，每次禁用 1 艘战舰，每队有两次机会，双方交替进行 每一阶段比赛结束，获胜方晋级，随后随机分配进入下一阶段比赛 每方队伍内不得拥有两艘以上相同战舰 ","date":"2023-01-14","objectID":"/posts/wows-8vs8/:1:2","tags":["WoWs"],"title":"战舰世界 8 VS 8 计划","uri":"/posts/wows-8vs8/"},{"categories":["Games"],"content":"阵容 序号代表优先级 二级列表代表下位替代，也就是如果被 Ban 了选的替代品 同一船只最多两个 ","date":"2023-01-14","objectID":"/posts/wows-8vs8/:2:0","tags":["WoWs"],"title":"战舰世界 8 VS 8 计划","uri":"/posts/wows-8vs8/"},{"categories":["Games"],"content":"CV * 1 航空母舰 纳西莫夫 (JamesFlare_1212) 马克思·因麦曼 (JamesFlare_1212) 马耳他 (JamesFlare_1212) ","date":"2023-01-14","objectID":"/posts/wows-8vs8/:2:1","tags":["WoWs"],"title":"战舰世界 8 VS 8 计划","uri":"/posts/wows-8vs8/"},{"categories":["Games"],"content":"BB * 3 战列舰 圣文森特 (huan5325) 征服者 俄亥俄 (killer_munber47) 蒙大拿 (killer_munber47) 勃艮第 八岛 ","date":"2023-01-14","objectID":"/posts/wows-8vs8/:2:2","tags":["WoWs"],"title":"战舰世界 8 VS 8 计划","uri":"/posts/wows-8vs8/"},{"categories":["Games"],"content":"CA * 3 巡洋舰 那不勒斯 (huan5325) 莫斯科 (XIAONAN819) 歌利亚 威尼斯 (huan5325) 斯大林格勒 (XIAONAN819) ","date":"2023-01-14","objectID":"/posts/wows-8vs8/:2:3","tags":["WoWs"],"title":"战舰世界 8 VS 8 计划","uri":"/posts/wows-8vs8/"},{"categories":["Games"],"content":"DD * 1 驱逐舰 斯莫兰 (CyberDragonInfinity) 果敢 (CyberDragonInfinity) 克莱贝尔 (CyberDragonInfinity) 德尔尼 玛索 哈巴洛夫斯克 ","date":"2023-01-14","objectID":"/posts/wows-8vs8/:2:4","tags":["WoWs"],"title":"战舰世界 8 VS 8 计划","uri":"/posts/wows-8vs8/"},{"categories":["Games"],"content":"打战损 由于空中有航母，水面有雷达，火力凶猛，初期和中期几乎不能进行点位的争夺，所以消灭对方有生力量是较好的战术。 由此可以得出次目标 保命 击杀 ","date":"2023-01-14","objectID":"/posts/wows-8vs8/:3:0","tags":["WoWs"],"title":"战舰世界 8 VS 8 计划","uri":"/posts/wows-8vs8/"},{"categories":["Games"],"content":"保命 说白了就是别死，和随机有些不一样，对手一般都会有沟通，所以常用的灭点跑路可能有难度。 所以在自己上的时候最好就想好退路，看看走到哪里能灭点，或者进山。 比如满血上去，就剩半血了，消耗品还不太OK了的时候就该转走了，被卡住损管就惨了， 当然，如果在打得到对面的情况下，拖刀是最好的选择，15km，16km 拖刀射击。 ","date":"2023-01-14","objectID":"/posts/wows-8vs8/:3:1","tags":["WoWs"],"title":"战舰世界 8 VS 8 计划","uri":"/posts/wows-8vs8/"},{"categories":["Games"],"content":"分担火力 这对战列舰来说比较重要，因为你们有巨大的血池，打到你们身上的伤害就不会打到巡洋舰身上，于是就活了。 也就是看时机上前，被打个几万之后撤走，等保健和损管好了再靠近，如此往复不停消耗。 ","date":"2023-01-14","objectID":"/posts/wows-8vs8/:3:2","tags":["WoWs"],"title":"战舰世界 8 VS 8 计划","uri":"/posts/wows-8vs8/"},{"categories":["Games"],"content":"集火 这是最重要的，目的是打死对面而不是打出很多伤害，因为可能战列舰吃个 100k 伤害还活着半血，如果这么多伤害打到巡洋舰身上，那大概率已经到海底了。 所以，集火优先级是 驱逐舰 巡洋舰 战列舰 谁血池少打谁，其次是谁机动不好打谁，因为这样可以保证有效命中保证输出效率。 除了集火这些目标，还有对残血的目标也要赶紧补刀，它的优先级应该是最高的，因为一旦让对方逃走，再见可能是半血了，然后反手把你杀了。 比如征服者，圣文森特，歌莉娅，蒙大拿，俄亥俄。 ","date":"2023-01-14","objectID":"/posts/wows-8vs8/:3:3","tags":["WoWs"],"title":"战舰世界 8 VS 8 计划","uri":"/posts/wows-8vs8/"},{"categories":["Games"],"content":"拉交叉 这是第二重要的，特别对于战列舰等 AP 火力而言。 就是说别都去边线，相对分散， 当然，在同时也要避免别人从边线推上来，打自己人的夹角。 ","date":"2023-01-14","objectID":"/posts/wows-8vs8/:3:4","tags":["WoWs"],"title":"战舰世界 8 VS 8 计划","uri":"/posts/wows-8vs8/"},{"categories":["Games"],"content":"控分 ","date":"2023-01-14","objectID":"/posts/wows-8vs8/:4:0","tags":["WoWs"],"title":"战舰世界 8 VS 8 计划","uri":"/posts/wows-8vs8/"},{"categories":["Games"],"content":"阻止占点 这次比赛这不是很难的事情，一个是因为驱逐少， 还有就是有 CV，有不少的巡洋，雷达船，我方还有 DD，基本不可能强行占点。 雷达船注意 雷达套住点位 开雷达前提醒队友集火 ","date":"2023-01-14","objectID":"/posts/wows-8vs8/:4:1","tags":["WoWs"],"title":"战舰世界 8 VS 8 计划","uri":"/posts/wows-8vs8/"},{"categories":["Games"],"content":"占点 开局避免进点，因为基本上必死，见机行动。 看看中后期有没有机会占点，驱逐活着是第一要务。 ","date":"2023-01-14","objectID":"/posts/wows-8vs8/:4:2","tags":["WoWs"],"title":"战舰世界 8 VS 8 计划","uri":"/posts/wows-8vs8/"},{"categories":["Games"],"content":"地图 本次比赛有3张地图 Sleeping Giant 沉睡的巨人 Northern Lights 北极光 Mountain Range 崇山峻岭 ","date":"2023-01-14","objectID":"/posts/wows-8vs8/:5:0","tags":["WoWs"],"title":"战舰世界 8 VS 8 计划","uri":"/posts/wows-8vs8/"},{"categories":["Games"],"content":"沉睡的巨人 Sleeping Giant\r尺寸 42*42km 官方YouTube视频 ","date":"2023-01-14","objectID":"/posts/wows-8vs8/:5:1","tags":["WoWs"],"title":"战舰世界 8 VS 8 计划","uri":"/posts/wows-8vs8/"},{"categories":["Games"],"content":"北极光 Northern Lights\r尺寸 48*48km 官方YouTube视频 ","date":"2023-01-14","objectID":"/posts/wows-8vs8/:5:2","tags":["WoWs"],"title":"战舰世界 8 VS 8 计划","uri":"/posts/wows-8vs8/"},{"categories":["Games"],"content":"崇山峻岭 Mountain Range\r尺寸 48*48km Tips 这把比赛有气旋 ","date":"2023-01-14","objectID":"/posts/wows-8vs8/:5:3","tags":["WoWs"],"title":"战舰世界 8 VS 8 计划","uri":"/posts/wows-8vs8/"},{"categories":["Cards"],"content":"给杨文雅的贺卡，恭喜你上大学了，很高兴认识你！本页是一份现代化的贺卡，不出意外你将通过二维码扫描获得。不同于普通的文本，这是富文本，当然我个人还是喜欢戏称其为肥文本。","date":"2023-01-13","objectID":"/posts/cards-wen-welcome-university/","tags":["Gifts","Friends"],"title":"For 杨文雅","uri":"/posts/cards-wen-welcome-university/"},{"categories":["Cards"],"content":"\r贺卡\r","date":"2023-01-13","objectID":"/posts/cards-wen-welcome-university/:0:0","tags":["Gifts","Friends"],"title":"For 杨文雅","uri":"/posts/cards-wen-welcome-university/"},{"categories":["Cards"],"content":"Introduction 本页是一份现代化的贺卡，不出意外你将通过二维码扫描获得。 不同于普通的文本，这是富文本，当然我个人还是喜欢戏称其为肥文本。 ","date":"2023-01-13","objectID":"/posts/cards-wen-welcome-university/:1:0","tags":["Gifts","Friends"],"title":"For 杨文雅","uri":"/posts/cards-wen-welcome-university/"},{"categories":["Cards"],"content":"Review 我想我认识你很久，很久了，属于空前绝后了，以至于我都忘了什么时候认识的了，至少在我可以肯定在四年级以前。我确实没想到都到了要上大学的时候了，高情商的说法是时光飞逝，低情商一些就是不知道时间怎么过的，天天摸鱼。 本人的学术生涯不幸被两个城市和数个学校切得稀碎，现在不是很多人毕业了，发个自己从小到大，学校的定位吗，一般也就三四个，我怕不是要来个七个。有个老师当时说，我真佩服那些转学的人。我当时觉得，这算什么，就这？后来我理解了，那就意味着你和你的朋友们基本上说再见了，重新开始一段新的关系需要勇气，特别是我直接不在一个城市。 我每次离开，总有一群人说舍不得之类的话，有老师也有学生。我当时并不在意，而且本人对那些学校也不是特别满意的样子。现在想想确实有感到一丝难过，特别看见他们有空时爬出去玩的内容。不过讲道理，我从逻辑上是肯定没后悔的，事实也应该如此。至于造成我 emo 的原因，那是一个人脑的特性。我们回忆时总会选择加强那些美好的部分，而选择性淡化不快乐的内容。 就比如我后来去参加了我当时那个中学，初三的毕业典礼。讲道理，去的时候我感觉很快乐，有一丝兴奋。但是真进了教室感觉不对劲了，况且那天 50 几人搞得满地都是渣渣，有油，有可乐，有水，还有礼炮的彩色碎片，那种玩意粘得死死的。他们一波全跑了，我爬在那地上清理了 3 个多小时，搞到下午五点，这……无情。 扩展内容， 高铁是怎样破坏回家“形式感”的？【懂点儿啥】\rhttps://www.bilibili.com/video/av380220222\r现在写这 posts 的时候有有些 emo 了，想到和我有3年以上联系的同学屈指可数（暂时数出来一个），和杨小姐你以前玩的时候多快乐，不久又不知道什么时候相见了，见面时又怎样。导致我更加 emo 了，可见完美的理论依旧不能缓解我切实的感受（让我知道自己怎么败的）渣渣 human science。 停，到这打住！不行了！ ","date":"2023-01-13","objectID":"/posts/cards-wen-welcome-university/:2:0","tags":["Gifts","Friends"],"title":"For 杨文雅","uri":"/posts/cards-wen-welcome-university/"},{"categories":["Cards"],"content":"Maths ","date":"2023-01-13","objectID":"/posts/cards-wen-welcome-university/:3:0","tags":["Gifts","Friends"],"title":"For 杨文雅","uri":"/posts/cards-wen-welcome-university/"},{"categories":["Cards"],"content":"作恶 科技发展迅速，或许没人记得初代 iPhone 发布的时候，Apple 和全世界所有同行的共识就是，智能手机是以浏览器 Web 为主，扩展电脑 PC 的一个便携设备。可惜当时的 3G 网络并没有这样的土壤，所以就有了 App 这个东西。可似乎事情并没有按照理想发展，现在我们知道，各种臃肿的超级 App 获取他们不该有的权限，占用夸张的资源，Web 端则被不断阉割。 🌐用一个网页，感受「现代互联网」 🔗：Web | 群友汉化版 相信很多读者的浏览器里面，都装了类似 ADBlocker 的广告拦截插件，那是因为大家对各种突如其来的弹窗式广告不胜其扰 今天要介绍的网页可以说足够让人「血压升高」，其中完美地模拟了各种弹窗权限、广告、订阅、引导信息。总有一款，你在现代互联网中会经常遇到 😕不幸的是，Web 2.0 中很多网站都是以注册数、访问量为硬性指标，因为这样可以带来广告阅读收益，并完成公司 KPI。为此，网页运营者可以不顾用户体验，强行加入各种引导式弹窗和狗皮膏药广告，国内还有「下载手机 App 并查看」这样的特色 🧐作为一个每天在电脑上阅读大量网站的人，我对现在的网页现状感到痛心，但也只能通过安装一些拦截插件来缓解。界面整洁、尊重读者、维持好赢利和阅读体验的关系，对网站所有者本身是一个很大的挑战，这样的网页和社区，也正在逐渐消失、妥协 @NewlearnerChannel 希望你在拥有强大的工具后提升工作的体验，享受科技带来的美好生活。 ","date":"2023-01-13","objectID":"/posts/cards-wen-welcome-university/:3:1","tags":["Gifts","Friends"],"title":"For 杨文雅","uri":"/posts/cards-wen-welcome-university/"},{"categories":["Cards"],"content":"开始数学之旅 你选了数学作为你的专业，那不出意外你很快会开始探索当代生活的底层逻辑。典中典的就是我开头的二维码，六十年前一篇不到五页的论文，如今成为当代现代生活底层无数的基石之一，无人问津但却伟大。 有兴趣可以看看，Paper 的名字叫 POLYNOMIAL CODES OVER CERTAIN FINITE FIELDS，基于特定有限域的多项式编码。文件如下 RS-1960.pdf\r/posts/cards-wen-welcome-university/RS-1960.pdf\r下面算是一些扩展内容了，你想过，什么是数学吗。它很特别，可能是人类最接近完美的理论（原则上它必须完美，否者 1 + 1 ≠ 2 了那岂不是乱套）。没有不确定性，比如物理头顶的乌云，笑。但事情也不那么绝对。 数学并不完备，数学有一个致命缺陷\rhttps://www.bilibili.com/video/av760865508?p=1\r数学决斗，虚数的来源\rhttps://www.bilibili.com/video/av209212793?p=1\r","date":"2023-01-13","objectID":"/posts/cards-wen-welcome-university/:3:2","tags":["Gifts","Friends"],"title":"For 杨文雅","uri":"/posts/cards-wen-welcome-university/"},{"categories":["Cards"],"content":"Sources 最后，考虑到这是本人建的第 n 个网站了（搞没好几个），所以有兴趣的话还是离线保存本页吧，不然哪天没了就，整活了。Ctrl + P 或 Comand + P 以打印网页为 PDF，或右键网页另存为。 Adobe Illustrator 项目原文件 for杨文雅.ai\r/posts/cards-wen-welcome-university/for%E6%9D%A8%E6%96%87%E9%9B%85.ai\r","date":"2023-01-13","objectID":"/posts/cards-wen-welcome-university/:4:0","tags":["Gifts","Friends"],"title":"For 杨文雅","uri":"/posts/cards-wen-welcome-university/"},{"categories":["Tutorials","Sharing"],"content":"这可能是中文互联网上唯一一篇讲如何全栈部署 Excalidraw 的，绝大多数只是部署了一个残血的前端。但是有没有发现，分享链接和在线协作有问题，用不了？甚至 Libraries 还有点问题？本人试图在本地私有化部署 Excalidraw，操作是很简单。","date":"2023-01-13","objectID":"/posts/excalidraw-full-stack-docker/","tags":["Open Source","JavaScript","Docker"],"title":"Excalidraw 全功能自部署","uri":"/posts/excalidraw-full-stack-docker/"},{"categories":["Tutorials","Sharing"],"content":"Intro 这可能是中文互联网上唯一一篇讲如何全栈部署 Excalidraw 的，绝大多数只是部署了一个残血的前端。 本人试图在本地私有化部署 Excalidraw，操作是很简单，根据官方的 README，一会就完成了是吧。 ","date":"2023-01-13","objectID":"/posts/excalidraw-full-stack-docker/:1:0","tags":["Open Source","JavaScript","Docker"],"title":"Excalidraw 全功能自部署","uri":"/posts/excalidraw-full-stack-docker/"},{"categories":["Tutorials","Sharing"],"content":"Issue 但是有没有发现，分享链接和在线协作有问题，用不了？甚至 Libraries 还有点问题？ 这是因为，几乎全网的搭建教程都只是搭建了 excalidraw-app 这个前端，它的存储需要 excalidraw-json，协作需要 excalidraw-room。 这些代码官方都开源了，不过前端的进度实在是太快了，于是乎这些就都用不了了。 比如官方开放的 excalidraw-json 是 S3 的存储，现在不出意外是 firebase，官方也没出个剥离的版本，那我们怎么办呢？ ","date":"2023-01-13","objectID":"/posts/excalidraw-full-stack-docker/:1:1","tags":["Open Source","JavaScript","Docker"],"title":"Excalidraw 全功能自部署","uri":"/posts/excalidraw-full-stack-docker/"},{"categories":["Tutorials","Sharing"],"content":"Solution 答，降级，构建全栈。 excalidraw-app 我们用官方的，不过版本差不多是 9 个月前的，讲道理，功能也没少多少，bug 也没什么问题，这一代前端可以很好兼容。 excalidraw-json 是用不得了，国外也有一些方案用 minio 来跑 S3 对接它，但是我测试了，问题有些大，这个后端应该是用不得了，所幸的是，我找到了一个第三方，用自己代码实现的全功能后端，支持 v2 的 api，excalidraw-storage-backend。 excalidraw-room 我们用官方的，最新一版，差不多是 9 个月前的，和前端一致，可以正常使用。 redis，这个是 excalidraw-storage-backend 所需要的，用于临时存储分享画板的数据，所以它不能保证数据可靠性。 那我们开始吧，本方案使用 docker-compose。 excalidraw-app excalidraw-room excalidraw-storage-backend redis ","date":"2023-01-13","objectID":"/posts/excalidraw-full-stack-docker/:1:2","tags":["Open Source","JavaScript","Docker"],"title":"Excalidraw 全功能自部署","uri":"/posts/excalidraw-full-stack-docker/"},{"categories":["Tutorials","Sharing"],"content":"Operation Docker Compose 配置 version: \"3.8\" services: excalidraw: image: kiliandeca/excalidraw healthcheck: disable: true ports: - \"80:80\" # 默认端口80，可以修改 environment: BACKEND_V2_GET_URL: http://localhost:8080/api/v2/scenes/ BACKEND_V2_POST_URL: http://localhost:8080/api/v2/scenes/ LIBRARY_URL: https://libraries.excalidraw.com LIBRARY_BACKEND: https://us-central1-excalidraw-room-persistence.cloudfunctions.net/libraries SOCKET_SERVER_URL: http://localhost:5000/ STORAGE_BACKEND: \"http\" HTTP_STORAGE_BACKEND_URL: \"http://localhost:8080/api/v2\" excalidraw-storage-backend: image: kiliandeca/excalidraw-storage-backend ports: - \"8080:8080\" environment: STORAGE_URI: redis://redis:6379 excalidraw-room: image: excalidraw/excalidraw-room ports: - \"5000:80\" redis: image: redis ports: - \"6379:6379\" 本身不支持 https，如有需要可以通过反向代理实现，不过记得同时修改 environment 中的变量 此配置文件经本地测试通过，可完美运行。 如果你 6379 端口有冲突，那可以选择构建一个 network docker network create excalidraw-net 然后像这样对其进行一些修改，就完成了 version: \"3.8\" services: excalidraw: image: kiliandeca/excalidraw healthcheck: disable: true ports: - \"80:80\" environment: BACKEND_V2_GET_URL: http://localhost:8080/api/v2/scenes/ BACKEND_V2_POST_URL: http://localhost:8080/api/v2/scenes/ LIBRARY_URL: https://libraries.excalidraw.com LIBRARY_BACKEND: https://us-central1-excalidraw-room-persistence.cloudfunctions.net/libraries SOCKET_SERVER_URL: http://localhost:5000/ STORAGE_BACKEND: \"http\" HTTP_STORAGE_BACKEND_URL: \"http://localhost:8080/api/v2\" excalidraw-storage-backend: image: kiliandeca/excalidraw-storage-backend ports: - \"8080:8080\" environment: STORAGE_URI: redis://redis:6379 excalidraw-room: image: excalidraw/excalidraw-room ports: - \"5000:80\" redis: image: redis expose: - \"6379\" networks: default: external: name: excalidraw-net ","date":"2023-01-13","objectID":"/posts/excalidraw-full-stack-docker/:2:0","tags":["Open Source","JavaScript","Docker"],"title":"Excalidraw 全功能自部署","uri":"/posts/excalidraw-full-stack-docker/"},{"categories":["Tutorials","Sharing"],"content":"Run 找一个，或者新建一个目录，创建 docker-compose 文件 nano docker-compose.yml 填入 docker-compose 配置，记得按你的实际情况修改。 随后我们要配置一下反向代理，我的 Web Server 是 OpenLiteSpeed，其他的同理。 首先需要创建 External App，类型是 Web Server，一共三个，分别对应 excalidraw excalidraw-room excalidraw-storage-backend 名字可以相对应，下面三个是必填的，可以参考我的配置 Setting Value Max Connections 2000 Initial Request Timeout (secs) 60 Retry Timeout (secs) 0 地址端口对应 docker-compose 中的。 随后我们需要创建一个 Vitrual Host，以下供参考 Setting Value Virtual Host Name excalidraw Virtual Host Root excalidraw Config File conf/vhosts/$VH_NAME/vhconf.conf Max Keep-Alive Requests 20000 Follow Symbolic Link Yes Enable Scripts/ExtApps Yes Restrained Yes Enable GZIP Compression Yes Enable Brotli Compression Yes 在创建 Vitrual Host 之前你需要在 /usr/local/lsws 下创建一个目录 mkdir /usr/local/lsws/excalidraw 然后完成引导选项，不知道怎么填的话可以参考上面的参数。 也可以参照 OpenLiteSpeed：从入门到放弃-荒岛 (lala.im) 我们就可以去 Rewrite 里配置了，添加如下 Rewrite Rules RewriteCond %{SERVER_PORT} ^80$ RewriteRule .* https://%{SERVER_NAME}%{REQUEST_URI} [R=301,L] RewriteEngine on RewriteRule /api/(.*) http://excalidraw-storage-backend/api/$1 [P] RewriteRule /socket.io/(.*) http://excalidraw-room/socket.io/$1 [P] RewriteRule /(.*) http://excalidraw/$1 [P,L] 完事后记得在 Rewrite Control 里开启，Enable Rewrite 设置为 Yes，不然就白给了。 RewriteCond %{SERVER_PORT} ^80$ RewriteRule .* https://%{SERVER_NAME}%{REQUEST_URI} [R=301,L] 我在重写规则中加入了如上配置，这是自动跳转 https，如果你没有 https 的需要，记得修改。 还记得一个问题吗，excalidraw-room 用 websocket 实现实时通信，我们也需要让它支持 websocket。 在 OpenLiteSpeed 中，它有一个专门的项。去到 Web Socket Proxy，新建一条 URL /socket.io/ Address 127.0.0.1:\u003c你设置的excalidraw-room端口\u003e 接下来设置好域名，到 General 设置，SSL 如有需要也可以去 SSL 项设置。 最后记得在 Listener 里把 Virtual Host 加上。 ","date":"2023-01-13","objectID":"/posts/excalidraw-full-stack-docker/:3:0","tags":["Open Source","JavaScript","Docker"],"title":"Excalidraw 全功能自部署","uri":"/posts/excalidraw-full-stack-docker/"},{"categories":["Tutorials","Sharing"],"content":"Ending ","date":"2023-01-13","objectID":"/posts/excalidraw-full-stack-docker/:4:0","tags":["Open Source","JavaScript","Docker"],"title":"Excalidraw 全功能自部署","uri":"/posts/excalidraw-full-stack-docker/"},{"categories":["Tutorials","Sharing"],"content":"Stack ","date":"2023-01-13","objectID":"/posts/excalidraw-full-stack-docker/:4:1","tags":["Open Source","JavaScript","Docker"],"title":"Excalidraw 全功能自部署","uri":"/posts/excalidraw-full-stack-docker/"},{"categories":["Tutorials","Sharing"],"content":"Addtional 不要被我这里的 OpenLiteSpeed 搞混了，用 Nginx 什么的本质上没区别，搞对结构即可。 ","date":"2023-01-13","objectID":"/posts/excalidraw-full-stack-docker/:5:0","tags":["Open Source","JavaScript","Docker"],"title":"Excalidraw 全功能自部署","uri":"/posts/excalidraw-full-stack-docker/"},{"categories":["Tutorials","Sharing"],"content":"本文是基于论文 Detecting Photoshopped Faces by Scripting Photoshop 的复现与使用，原始团队在 GitHub 上公布了代码，我们可以非常简单的在本地部署。你好奇你的小伙伴们有没有 PS 自己的照片吗？","date":"2023-01-13","objectID":"/posts/faldetector-vivian-li/","tags":["AI","Open Source"],"title":"真假李宜婷 FALDetector 的应用与教程","uri":"/posts/faldetector-vivian-li/"},{"categories":["Tutorials","Sharing"],"content":"前言 本文是基于论文 Detecting Photoshopped Faces by Scripting Photoshop 的复现与使用，原始团队在 GitHub 上公布了代码，我们可以非常简单的在本地部署。 标题有些吸引眼球的意思了，看上去似乎是个社会学文章，其实是技术文章。 不过社会学的也在做就是了。 ","date":"2023-01-13","objectID":"/posts/faldetector-vivian-li/:1:0","tags":["AI","Open Source"],"title":"真假李宜婷 FALDetector 的应用与教程","uri":"/posts/faldetector-vivian-li/"},{"categories":["Tutorials","Sharing"],"content":"论文 Detecting Photoshopped Faces by Scripting Photoshop [Project Page] [Paper] Sheng-Yu Wang1, Oliver Wang2, Andrew Owens1, Richard Zhang2, Alexei A. Efros1. UC Berkeley1, Adobe Research2. In ICCV, 2019. ","date":"2023-01-13","objectID":"/posts/faldetector-vivian-li/:2:0","tags":["AI","Open Source"],"title":"真假李宜婷 FALDetector 的应用与教程","uri":"/posts/faldetector-vivian-li/"},{"categories":["Tutorials","Sharing"],"content":"(A) Acknowledgments This repository borrows partially from the pytorch-CycleGAN-and-pix2pix, drn, and the PyTorch torchvision models repositories. ","date":"2023-01-13","objectID":"/posts/faldetector-vivian-li/:2:1","tags":["AI","Open Source"],"title":"真假李宜婷 FALDetector 的应用与教程","uri":"/posts/faldetector-vivian-li/"},{"categories":["Tutorials","Sharing"],"content":"(B) Citation, Contact If you find this useful for your research, please consider citing this bibtex. Please contact Sheng-Yu Wang \u003csheng-yu_wang at berkeley dot edu\u003e with any comments or feedback. ","date":"2023-01-13","objectID":"/posts/faldetector-vivian-li/:2:2","tags":["AI","Open Source"],"title":"真假李宜婷 FALDetector 的应用与教程","uri":"/posts/faldetector-vivian-li/"},{"categories":["Tutorials","Sharing"],"content":"部署 介于代码已经开源，使用它并不复杂 ","date":"2023-01-13","objectID":"/posts/faldetector-vivian-li/:3:0","tags":["AI","Open Source"],"title":"真假李宜婷 FALDetector 的应用与教程","uri":"/posts/faldetector-vivian-li/"},{"categories":["Tutorials","Sharing"],"content":"Windows 在 Windows 上面部署，和在 Linux 上差不多，只有一点点不同。 Anaconda Shell 首先我们需要安装 Anaconda，这一过程没什么困难的，就跳过了。 之后打开 Anaconda Prompt (anaconda3) Anaconda 3\r就会出现一个CMD窗口 (base) C:\\Users\\James\u003e 不过它默认用的是 Windows 默认的 cmd.exe， 我不是很喜欢，我用的是 WezTerm。 所以需要一点额外操作， 这个 Anaconda Prompt (anaconda3) 快捷方式是以下内容 %windir%\\System32\\cmd.exe \"/K\" C:\\Users\\James\\anaconda3\\Scripts\\activate.bat C:\\Users\\James\\anaconda3 有两种选择， 一个是修改快捷方式里的， %windir%\\System32\\cmd.exe \"/K\" 或者在WezTerm里执行 C:\\Users\\James\\anaconda3\\Scripts\\activate.bat C:\\Users\\James\\anaconda3 Anaconda 3 WezTerm\r效果是差不多的。 我们之后的命令都需要在这里面操作，当报错的时候请检查是不是在 Anaconda Prompt (anaconda3) 里进行的。 Anaconda Channels 在国内访问默认的源可能有些慢和不稳定，我们可以使用清华大学的镜像 这样通过如下命令添加 conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/ 设置搜索时显示通道地址，这样可以方便我们发现有没有正确配置源 conda config --set show_channel_urls yes Environment 之后我们需要在 Anaconda 里创建一个虚拟环境，这里取名为FALD。 conda create -n FALD python=3.6 这一步可能会消耗一点时间， 它会安装一些必要组件，conda 询问时记得同意, 输入yes + Enter。 在完成之后，我们再进入FALD conda activate FALD 记住，往后我们每次要对 FALdetector 进行操作的时候都要进入这个环境。 Work Path 之后我们需要按照论文里的指示，配置环境 首先，需要拉取源码，位于 GitHub FALdetector 不过我为大家准备了处理好的版本，位于 FALdetector 这是因为，你需要人工下载两个东西，一个是模型，一个是测试集。 原文提供了两个脚本 download_weights.sh download_valset.sh 不过 Shell 脚本在 Windows 上并不好配置，我们只能手动下载了。 如果你有动手能力，那也可以手动地把这两个东西下到位。 或者使用我这个放好了的版本。 https://drive.jamesflare.com/api/v3/file/get/86171/FALdetector.7z?sign=aErdfOxvXdZH89kAhthihQm1DsC4E3qnDunWXgApHLU%3D%3A0 新建一个文件夹，然后在放入解压的文件之前， 启用 Windows 区分大小写功能 fsutil.exe file SetCaseSensitiveInfo 文件夹位置 enable 这是保险起见，不做应该也没问题， 请在一个新的 CMD 窗口以管理员执行。 下载后我们解压到那个启用 Windows 区分大小写功能的文件夹， 这里我放到桌面。 之后我们需要进入我们解压好的FALdetector目录， 在这里是C:\\Users\\James\\Desktop\\FALdetector cd C:\\Users\\James\\Desktop\\FALdetector 不出意外你的输出应该类似于 (FALD) C:\\Users\\James\\Desktop\\FALdetector\u003e Requirements 接下来我们需要配置一下依赖， 在用 pip 安装的时候，我选择了使用镜像来加速 使用以下参数 -i https://pypi.tuna.tsinghua.edu.cn/simple 注意，需要在环境FALD下操作 安装 cmake pip install cmake -i https://pypi.tuna.tsinghua.edu.cn/simple 和一些其他包 dlib mmcv scipy numpy matplotlib opencv_python Pillow torch\u003e=0.4.0 torchvision conda install dlib conda install pytorch torchvision torchaudio cudatoolkit=10.2 -c pytorch pip install mmcv scipy numpy matplotlib opencv_python Pillow -i https://pypi.tuna.tsinghua.edu.cn/simple ","date":"2023-01-13","objectID":"/posts/faldetector-vivian-li/:3:1","tags":["AI","Open Source"],"title":"真假李宜婷 FALDetector 的应用与教程","uri":"/posts/faldetector-vivian-li/"},{"categories":["Tutorials","Sharing"],"content":"运行 所有准备工作已经就绪。 项目拥有两个程序 global_classifier.py local_detector.py global_classifier.py 用于给出概率，输出类似 Probibility being modified by Photoshop FAL: 98.82% 使用方法为 python global_classifier.py --input_path \"输入文件\" --model_path weights/global.pth 示例 (FALD) C:\\Users\\James\\Desktop\\FALdetector\u003epython global_classifier.py --input_path \"examples/sampleVivanLi (13).jpg\" --model_path weights/global.pth Probibility being modified by Photoshop FAL: 2.72% local_detector.py 用于生成热力图， 使用方法为 python local_detector.py --input_path \"输入文件\" --model_path weights/local.pth --dest_folder 输出目录 示例 (FALD) C:\\Users\\James\\Desktop\\FALdetector\u003epython local_detector.py --input_path \"examples/sampleVivanLi (154).jpg\" --model_path weights/local.pth --dest_folder out/ 然后我们就可以在 out 文件夹下找到生成的三张图片了 Vivan Li 154 Heatmap\r第一张是 dlib 识别并裁切的人像，也是 FALdetector 的输入文件， 第二张是 FALdetector 生成的热力图，体现了 AI 对光流场的预测，显示了潜在的篡改区域， 第三张是 FALdetector 基于预测结果，尝试对图像进行的还原。 根据我的观察，他们有些很准，有些还是比较困难，颜色，像素，光照都很影响结果。 仅供参考 ","date":"2023-01-13","objectID":"/posts/faldetector-vivian-li/:4:0","tags":["AI","Open Source"],"title":"真假李宜婷 FALDetector 的应用与教程","uri":"/posts/faldetector-vivian-li/"},{"categories":["Tutorials","Sharing"],"content":"额外 额外我还找了个叫 Asshiteru 的人的图像，这是其中一张 (FALD) C:\\Users\\James\\Desktop\\FALdetector\u003epython global_classifier.py --input_path \"examples/aishiteruSample (36).jpg\" --model_path weights/global.pth Probibility being modified by Photoshop FAL: 97.92% (FALD) C:\\Users\\James\\Desktop\\FALdetector\u003epython local_detector.py --input_path \"examples/aishiteruSample (36).jpg\" --model_path weights/local.pth --dest_folder out/36/ Asshiteru 36 Heatmap\r两个完整例子可从下方下载 //FALDVivanLi.zip https://drive.jamesflare.com/api/v3/file/get/86172/FALDVivanLi.zip?sign=ca-b00_d0GbBn40HsBG3v8IaZTY2KlmsW0R-ZLLFpr8%3D%3A0 //FALDAsshiteru.zip https://drive.jamesflare.com/api/v3/file/get/86170/FALDAsshiteru.zip?sign=9G5oCp9uapNbUvmOeyih87HxR2Dz_t3PUx64tcvnyqE%3D%3A0 ","date":"2023-01-13","objectID":"/posts/faldetector-vivian-li/:5:0","tags":["AI","Open Source"],"title":"真假李宜婷 FALDetector 的应用与教程","uri":"/posts/faldetector-vivian-li/"},{"categories":["Tutorials","Sharing"],"content":"总结 这无疑给我们提供了一个全新的视角，在此之前我认为 Vivan 的图像应该大部分是被篡改过的，但是现在我改变主意了。 330 个样本里，拥有明显痕迹的也就 20+。 87%+ 以上都是几乎原图，这与我们的主观严重不符。 或许很少有人会有把一个人 300+ 张图像放在一起观察的机会， 但是对我而言，依然有数张图像我认为是非常好看的，比如 Sample13，而且 Probibility being modified by Photoshop FAL 的值非常低。 可见，PS 技术可能并没有起到确定性作用，更多的还是构图和摄影技术。 Asshiteru，我对她是谁，几乎没有概念。 不过，她超过半数的图像都有明显的篡改痕迹，听说她挺有名的。 小巫见大巫了，属于是。 ","date":"2023-01-13","objectID":"/posts/faldetector-vivian-li/:6:0","tags":["AI","Open Source"],"title":"真假李宜婷 FALDetector 的应用与教程","uri":"/posts/faldetector-vivian-li/"},{"categories":["Tutorials","Sharing"],"content":"缺点 这个项目是 Adobe 资助的，3 年了，他们也没有放出模型训练的细节和源码，可能有一些商业的考量在里面吧。 带来的结果就是有不少局限性。 比如对色彩不敏感，对轮廓很敏感。 就是说，美白，磨皮，大概率是对结果没有影响的。而且在这些例子里，诸如瘦脸，增大眼睛等功能也没有很激进，于是乎对判别也有挑战。 还有对脸以外的区域也没有判别力。 ","date":"2023-01-13","objectID":"/posts/faldetector-vivian-li/:7:0","tags":["AI","Open Source"],"title":"真假李宜婷 FALDetector 的应用与教程","uri":"/posts/faldetector-vivian-li/"},{"categories":["Tutorials","Sharing"],"content":"预告 我们爬取了 Instagram 上一部分，30 位博主，大约 22,000 张图像，一个更大样本的社会学研究，测试正在进行。 ","date":"2023-01-13","objectID":"/posts/faldetector-vivian-li/:8:0","tags":["AI","Open Source"],"title":"真假李宜婷 FALDetector 的应用与教程","uri":"/posts/faldetector-vivian-li/"}]